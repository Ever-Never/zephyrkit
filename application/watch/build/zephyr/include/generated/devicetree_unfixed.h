/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   iwatchv0.dts.pre.tmp
 *
 * Directories with bindings:
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings, /home/wt/zephyr-kit/zephyr_pkg/zephyr/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /channel
 *   3   /chosen
 *   4   /memory@10000000
 *   5   /memory@10010000
 *   6   /memory@55000000
 *   7   /cpus
 *   8   /power-states
 *   9   /power-states/state0
 *   10  /power-states/state1
 *   11  /cpus/cpu@0
 *   12  /gpio_keys
 *   13  /soc
 *   14  /soc/pin-controller@40010000
 *   15  /soc/pin-controller@40010000/gpio@40010800
 *   16  /gpio_keys/button-1
 *   17  /soc/pin-controller@40010000/gpio@40010000
 *   18  /gpio_keys/button-2
 *   19  /mspi-nor
 *   20  /mspi-nor/partitions
 *   21  /mspi-nor/partitions/partition@0
 *   22  /mspi-nor/partitions/partition@800000
 *   23  /mspi-nor/partitions/partition@A00000
 *   24  /mspi-nor/partitions/partition@C00000
 *   25  /mspi-nor/partitions/partition@E00000
 *   26  /mspi-nor/partitions/partition@1000000
 *   27  /mspi-nor/partitions/partition@1200000
 *   28  /mspi-nor/partitions/partition@1400000
 *   29  /mspi-nor/partitions/partition@1600000
 *   30  /pwmmotor
 *   31  /soc/timers@6
 *   32  /soc/timers@6/pwm
 *   33  /pwmmotor/motor
 *   34  /soc/interrupt-controller@e000e100
 *   35  /soc/adc@50010000
 *   36  /soc/i2c@50004000
 *   37  /soc/i2c@50006000
 *   38  /soc/i2c@50008000
 *   39  /soc/i2c@50009000
 *   40  /soc/mspi@50014000
 *   41  /soc/mspi@50015000
 *   42  /soc/mspi@50016000
 *   43  /soc/rtc@40004200
 *   44  /soc/serial@4000c400
 *   45  /soc/serial@4001c000
 *   46  /soc/spi@50005000
 *   47  /soc/spi@50006000
 *   48  /soc/spi@50007000
 *   49  /soc/spi@50008000
 *   50  /soc/spi@50009000
 *   51  /soc/timer@e000e010
 *   52  /soc/flash-controller@40018000
 *   53  /soc/flash-controller@40018000/flash@00000000
 *   54  /soc/flash-controller@40018000/flash@00000000/partitions
 *   55  /soc/flash-controller@40018000/flash@00000000/partitions/partition@0
 *   56  /soc/flash-controller@40018000/flash@00000000/partitions/partition@c000
 *   57  /soc/flash-controller@40018000/flash@00000000/partitions/partition@3c000
 *   58  /soc/i2c@50005000
 *   59  /soc/i2c@50005000/mmc5603@30
 *   60  /soc/i2c@50007000
 *   61  /soc/i2c@50007000/cw6305@0B
 *   62  /soc/pin-controller@40010000/gpio@40010400
 *   63  /soc/spi@50004000
 *   64  /soc/spi@50004000/icm42607@0
 *   65  /soc/timers@0
 *   66  /soc/timers@0/pwm
 *   67  /soc/timers@1
 *   68  /soc/timers@1/pwm
 *   69  /soc/timers@2
 *   70  /soc/timers@2/pwm
 *   71  /soc/timers@3
 *   72  /soc/timers@3/pwm
 *   73  /soc/timers@4
 *   74  /soc/timers@4/pwm
 *   75  /soc/timers@5
 *   76  /soc/timers@5/pwm
 *   77  /soc/timers@7
 *   78  /soc/timers@7/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_10010000) fn(DT_N_S_memory_10000000) fn(DT_N_S_memory_55000000) fn(DT_N_S_power_states) fn(DT_N_S_mspi_nor) fn(DT_N_S_channel) fn(DT_N_S_pwmmotor) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_10010000) fn(DT_N_S_memory_10000000) fn(DT_N_S_memory_55000000) fn(DT_N_S_power_states) fn(DT_N_S_mspi_nor) fn(DT_N_S_channel) fn(DT_N_S_pwmmotor) fn(DT_N_S_gpio_keys) 

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /channel */ \
	3, /* /chosen */ \
	4, /* /memory@10000000 */ \
	5, /* /memory@10010000 */ \
	6, /* /memory@55000000 */ \
	7, /* /cpus */ \
	8, /* /power-states */ \
	12, /* /gpio_keys */ \
	13, /* /soc */ \
	19, /* /mspi-nor */ \
	30, /* /pwmmotor */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_ambiq_apollo3p DT_N

/* Special property macros: */
#define DT_N_REG_NUM 0
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_ambiq_apollo3p 1
#define DT_N_STATUS_okay 1

/* Generic property macros: */
#define DT_N_P_compatible {"ambiq,apollo3p"}
#define DT_N_P_compatible_IDX_0 "ambiq,apollo3p"
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Special property macros: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /channel
 *
 * Node identifier: DT_N_S_channel
 */

/* Node's full path: */
#define DT_N_S_channel_PATH "/channel"

/* Node's name with unit-address: */
#define DT_N_S_channel_FULL_NAME "channel"

/* Node parent (/) identifier: */
#define DT_N_S_channel_PARENT DT_N
#define DT_N_S_channel_FOREACH_CHILD(fn) 
#define DT_N_S_channel_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_channel_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_channel_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_channel_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_channel_EXISTS 1
#define DT_N_INST_0_ambiq_channel DT_N_S_channel
#define DT_N_NODELABEL_channel    DT_N_S_channel

/* Special property macros: */
#define DT_N_S_channel_REG_NUM 0
#define DT_N_S_channel_IRQ_NUM 0
#define DT_N_S_channel_COMPAT_MATCHES_ambiq_channel 1
#define DT_N_S_channel_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_channel_P_compatible {"ambiq,channel"}
#define DT_N_S_channel_P_compatible_IDX_0 "ambiq,channel"
#define DT_N_S_channel_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_channel_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_channel, compatible, 0)
#define DT_N_S_channel_P_compatible_LEN 1
#define DT_N_S_channel_P_compatible_EXISTS 1
#define DT_N_S_channel_P_status "okay"
#define DT_N_S_channel_P_status_ENUM_IDX 1
#define DT_N_S_channel_P_status_ENUM_TOKEN okay
#define DT_N_S_channel_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_channel_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_channel, status, 0) \
	fn(DT_N_S_channel, status, 1) \
	fn(DT_N_S_channel, status, 2) \
	fn(DT_N_S_channel, status, 3)
#define DT_N_S_channel_P_status_EXISTS 1
#define DT_N_S_channel_P_label "channel"
#define DT_N_S_channel_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_channel, label, 0) \
	fn(DT_N_S_channel, label, 1) \
	fn(DT_N_S_channel, label, 2) \
	fn(DT_N_S_channel, label, 3) \
	fn(DT_N_S_channel, label, 4) \
	fn(DT_N_S_channel, label, 5) \
	fn(DT_N_S_channel, label, 6)
#define DT_N_S_channel_P_label_EXISTS 1

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Special property macros: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /memory@10000000
 *
 * Node identifier: DT_N_S_memory_10000000
 */

/* Node's full path: */
#define DT_N_S_memory_10000000_PATH "/memory@10000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_10000000_FULL_NAME "memory@10000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_10000000_PARENT DT_N
#define DT_N_S_memory_10000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_10000000_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_10000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_10000000_EXISTS 1
#define DT_N_INST_1_ambiq_apollo3p DT_N_S_memory_10000000
#define DT_N_NODELABEL_ccm0        DT_N_S_memory_10000000

/* Special property macros: */
#define DT_N_S_memory_10000000_REG_NUM 1
#define DT_N_S_memory_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_memory_10000000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_memory_10000000_IRQ_NUM 0
#define DT_N_S_memory_10000000_COMPAT_MATCHES_ambiq_apollo3p 1
#define DT_N_S_memory_10000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_memory_10000000_P_compatible {"ambiq,apollo3p"}
#define DT_N_S_memory_10000000_P_compatible_IDX_0 "ambiq,apollo3p"
#define DT_N_S_memory_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_10000000, compatible, 0)
#define DT_N_S_memory_10000000_P_compatible_LEN 1
#define DT_N_S_memory_10000000_P_compatible_EXISTS 1
#define DT_N_S_memory_10000000_P_reg {268435456 /* 0x10000000 */, 65536 /* 0x10000 */}
#define DT_N_S_memory_10000000_P_reg_IDX_0 268435456
#define DT_N_S_memory_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_P_reg_IDX_1 65536
#define DT_N_S_memory_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_10000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_10000000, reg, 0) \
	fn(DT_N_S_memory_10000000, reg, 1)
#define DT_N_S_memory_10000000_P_reg_EXISTS 1

/*
 * Devicetree node: /memory@10010000
 *
 * Node identifier: DT_N_S_memory_10010000
 *
 * Binding (compatible = mmio-sram):
 *   /home/wt/zephyr-kit/zephyr_pkg/zephyr/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_10010000_PATH "/memory@10010000"

/* Node's name with unit-address: */
#define DT_N_S_memory_10010000_FULL_NAME "memory@10010000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_10010000_PARENT DT_N
#define DT_N_S_memory_10010000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_10010000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_10010000_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_10010000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_10010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_10010000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_10010000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_10010000

/* Special property macros: */
#define DT_N_S_memory_10010000_REG_NUM 1
#define DT_N_S_memory_10010000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_10010000_REG_IDX_0_VAL_ADDRESS 268500992 /* 0x10010000 */
#define DT_N_S_memory_10010000_REG_IDX_0_VAL_SIZE 720896 /* 0xb0000 */
#define DT_N_S_memory_10010000_IRQ_NUM 0
#define DT_N_S_memory_10010000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_10010000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_memory_10010000_P_reg {268500992 /* 0x10010000 */, 720896 /* 0xb0000 */}
#define DT_N_S_memory_10010000_P_reg_IDX_0 268500992
#define DT_N_S_memory_10010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_10010000_P_reg_IDX_1 720896
#define DT_N_S_memory_10010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_10010000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_10010000, reg, 0) \
	fn(DT_N_S_memory_10010000, reg, 1)
#define DT_N_S_memory_10010000_P_reg_EXISTS 1
#define DT_N_S_memory_10010000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_10010000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_10010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_10010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_10010000, compatible, 0)
#define DT_N_S_memory_10010000_P_compatible_LEN 1
#define DT_N_S_memory_10010000_P_compatible_EXISTS 1

/*
 * Devicetree node: /memory@55000000
 *
 * Node identifier: DT_N_S_memory_55000000
 */

/* Node's full path: */
#define DT_N_S_memory_55000000_PATH "/memory@55000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_55000000_FULL_NAME "memory@55000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_55000000_PARENT DT_N
#define DT_N_S_memory_55000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_55000000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_55000000_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_55000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_55000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_55000000_EXISTS 1
#define DT_N_INST_0_aps1604_psram DT_N_S_memory_55000000
#define DT_N_NODELABEL_psram0     DT_N_S_memory_55000000

/* Special property macros: */
#define DT_N_S_memory_55000000_REG_NUM 1
#define DT_N_S_memory_55000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_55000000_REG_IDX_0_VAL_ADDRESS 1442840576 /* 0x56000000 */
#define DT_N_S_memory_55000000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_memory_55000000_IRQ_NUM 0
#define DT_N_S_memory_55000000_COMPAT_MATCHES_aps1604_psram 1
#define DT_N_S_memory_55000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_memory_55000000_P_compatible {"aps1604,psram"}
#define DT_N_S_memory_55000000_P_compatible_IDX_0 "aps1604,psram"
#define DT_N_S_memory_55000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_55000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_55000000, compatible, 0)
#define DT_N_S_memory_55000000_P_compatible_LEN 1
#define DT_N_S_memory_55000000_P_compatible_EXISTS 1
#define DT_N_S_memory_55000000_P_label "psram"
#define DT_N_S_memory_55000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_55000000, label, 0) \
	fn(DT_N_S_memory_55000000, label, 1) \
	fn(DT_N_S_memory_55000000, label, 2) \
	fn(DT_N_S_memory_55000000, label, 3) \
	fn(DT_N_S_memory_55000000, label, 4)
#define DT_N_S_memory_55000000_P_label_EXISTS 1
#define DT_N_S_memory_55000000_P_reg {1442840576 /* 0x56000000 */, 2097152 /* 0x200000 */}
#define DT_N_S_memory_55000000_P_reg_IDX_0 1442840576
#define DT_N_S_memory_55000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_55000000_P_reg_IDX_1 2097152
#define DT_N_S_memory_55000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_55000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_55000000, reg, 0) \
	fn(DT_N_S_memory_55000000, reg, 1)
#define DT_N_S_memory_55000000_P_reg_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	11, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Special property macros: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /power-states
 *
 * Node identifier: DT_N_S_power_states
 */

/* Node's full path: */
#define DT_N_S_power_states_PATH "/power-states"

/* Node's name with unit-address: */
#define DT_N_S_power_states_FULL_NAME "power-states"

/* Node parent (/) identifier: */
#define DT_N_S_power_states_PARENT DT_N
#define DT_N_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_power_states_S_state0) fn(DT_N_S_power_states_S_state1)
#define DT_N_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_power_states_S_state0) fn(DT_N_S_power_states_S_state1) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_SUPPORTS_ORDS \
	9, /* /power-states/state0 */ \
	10, /* /power-states/state1 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_EXISTS 1

/* Special property macros: */
#define DT_N_S_power_states_REG_NUM 0
#define DT_N_S_power_states_IRQ_NUM 0
#define DT_N_S_power_states_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /power-states/state0
 *
 * Node identifier: DT_N_S_power_states_S_state0
 *
 * Binding (compatible = zephyr,power-state):
 *   /home/wt/zephyr-kit/zephyr_pkg/zephyr/dts/bindings/power/state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_power_states_S_state0_PATH "/power-states/state0"

/* Node's name with unit-address: */
#define DT_N_S_power_states_S_state0_FULL_NAME "state0"

/* Node parent (/power-states) identifier: */
#define DT_N_S_power_states_S_state0_PARENT DT_N_S_power_states
#define DT_N_S_power_states_S_state0_FOREACH_CHILD(fn) 
#define DT_N_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_S_state0_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_S_state0_REQUIRES_ORDS \
	8, /* /power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_S_state0_SUPPORTS_ORDS \
	11, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_S_state0_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_power_states_S_state0
#define DT_N_NODELABEL_normal_sleep    DT_N_S_power_states_S_state0

/* Special property macros: */
#define DT_N_S_power_states_S_state0_REG_NUM 0
#define DT_N_S_power_states_S_state0_IRQ_NUM 0
#define DT_N_S_power_states_S_state0_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_power_states_S_state0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_power_states_S_state0_P_power_state_name "suspend-to-idle"
#define DT_N_S_power_states_S_state0_P_power_state_name_ENUM_IDX 2
#define DT_N_S_power_states_S_state0_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state0_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_power_states_S_state0, power_state_name, 0) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 1) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 2) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 3) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 4) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 5) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 6) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 7) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 8) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 9) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 10) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 11) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 12) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 13) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 14)
#define DT_N_S_power_states_S_state0_P_power_state_name_EXISTS 1
#define DT_N_S_power_states_S_state0_P_substate_id 0
#define DT_N_S_power_states_S_state0_P_substate_id_EXISTS 1
#define DT_N_S_power_states_S_state0_P_min_residency_us 500
#define DT_N_S_power_states_S_state0_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /power-states/state1
 *
 * Node identifier: DT_N_S_power_states_S_state1
 *
 * Binding (compatible = zephyr,power-state):
 *   /home/wt/zephyr-kit/zephyr_pkg/zephyr/dts/bindings/power/state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_power_states_S_state1_PATH "/power-states/state1"

/* Node's name with unit-address: */
#define DT_N_S_power_states_S_state1_FULL_NAME "state1"

/* Node parent (/power-states) identifier: */
#define DT_N_S_power_states_S_state1_PARENT DT_N_S_power_states
#define DT_N_S_power_states_S_state1_FOREACH_CHILD(fn) 
#define DT_N_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_S_state1_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_S_state1_REQUIRES_ORDS \
	8, /* /power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_S_state1_SUPPORTS_ORDS \
	11, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_S_state1_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_power_states_S_state1
#define DT_N_NODELABEL_deep_sleep      DT_N_S_power_states_S_state1

/* Special property macros: */
#define DT_N_S_power_states_S_state1_REG_NUM 0
#define DT_N_S_power_states_S_state1_IRQ_NUM 0
#define DT_N_S_power_states_S_state1_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_power_states_S_state1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_power_states_S_state1_P_power_state_name "suspend-to-idle"
#define DT_N_S_power_states_S_state1_P_power_state_name_ENUM_IDX 2
#define DT_N_S_power_states_S_state1_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state1_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_power_states_S_state1, power_state_name, 0) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 1) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 2) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 3) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 4) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 5) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 6) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 7) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 8) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 9) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 10) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 11) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 12) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 13) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 14)
#define DT_N_S_power_states_S_state1_P_power_state_name_EXISTS 1
#define DT_N_S_power_states_S_state1_P_substate_id 1
#define DT_N_S_power_states_S_state1_P_substate_id_EXISTS 1
#define DT_N_S_power_states_S_state1_P_min_residency_us 2000
#define DT_N_S_power_states_S_state1_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   /home/wt/zephyr-kit/zephyr_pkg/zephyr/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	7, /* /cpus */ \
	9, /* /power-states/state0 */ \
	10, /* /power-states/state1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Special property macros: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_power_states_S_state0
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_power_states_S_state1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-buttons):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/gpio/gpio-buttons.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button_1) fn(DT_N_S_gpio_keys_S_button_2)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button_1) fn(DT_N_S_gpio_keys_S_button_2) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	16, /* /gpio_keys/button-1 */ \
	18, /* /gpio_keys/button-2 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_buttons DT_N_S_gpio_keys

/* Special property macros: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_buttons 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_compatible {"gpio-buttons"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-buttons"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_label "buttons"
#define DT_N_S_gpio_keys_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, label, 0) \
	fn(DT_N_S_gpio_keys, label, 1) \
	fn(DT_N_S_gpio_keys, label, 2) \
	fn(DT_N_S_gpio_keys, label, 3) \
	fn(DT_N_S_gpio_keys, label, 4) \
	fn(DT_N_S_gpio_keys, label, 5) \
	fn(DT_N_S_gpio_keys, label, 6)
#define DT_N_S_gpio_keys_P_label_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_timers_0) fn(DT_N_S_soc_S_timers_1) fn(DT_N_S_soc_S_timers_2) fn(DT_N_S_soc_S_timers_3) fn(DT_N_S_soc_S_timers_4) fn(DT_N_S_soc_S_timers_5) fn(DT_N_S_soc_S_timers_6) fn(DT_N_S_soc_S_timers_7) fn(DT_N_S_soc_S_flash_controller_40018000) fn(DT_N_S_soc_S_pin_controller_40010000) fn(DT_N_S_soc_S_serial_4001c000) fn(DT_N_S_soc_S_serial_4000c400) fn(DT_N_S_soc_S_i2c_50004000) fn(DT_N_S_soc_S_i2c_50005000) fn(DT_N_S_soc_S_i2c_50006000) fn(DT_N_S_soc_S_i2c_50007000) fn(DT_N_S_soc_S_i2c_50008000) fn(DT_N_S_soc_S_i2c_50009000) fn(DT_N_S_soc_S_spi_50004000) fn(DT_N_S_soc_S_spi_50005000) fn(DT_N_S_soc_S_spi_50006000) fn(DT_N_S_soc_S_spi_50007000) fn(DT_N_S_soc_S_spi_50008000) fn(DT_N_S_soc_S_spi_50009000) fn(DT_N_S_soc_S_rtc_40004200) fn(DT_N_S_soc_S_adc_50010000) fn(DT_N_S_soc_S_mspi_50014000) fn(DT_N_S_soc_S_mspi_50015000) fn(DT_N_S_soc_S_mspi_50016000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_timers_0) fn(DT_N_S_soc_S_timers_6) fn(DT_N_S_soc_S_flash_controller_40018000) fn(DT_N_S_soc_S_pin_controller_40010000) fn(DT_N_S_soc_S_serial_4001c000) fn(DT_N_S_soc_S_serial_4000c400) fn(DT_N_S_soc_S_i2c_50005000) fn(DT_N_S_soc_S_i2c_50006000) fn(DT_N_S_soc_S_i2c_50007000) fn(DT_N_S_soc_S_i2c_50008000) fn(DT_N_S_soc_S_i2c_50009000) fn(DT_N_S_soc_S_spi_50004000) fn(DT_N_S_soc_S_rtc_40004200) fn(DT_N_S_soc_S_adc_50010000) fn(DT_N_S_soc_S_mspi_50014000) fn(DT_N_S_soc_S_mspi_50015000) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	14, /* /soc/pin-controller@40010000 */ \
	31, /* /soc/timers@6 */ \
	34, /* /soc/interrupt-controller@e000e100 */ \
	35, /* /soc/adc@50010000 */ \
	36, /* /soc/i2c@50004000 */ \
	37, /* /soc/i2c@50006000 */ \
	38, /* /soc/i2c@50008000 */ \
	39, /* /soc/i2c@50009000 */ \
	40, /* /soc/mspi@50014000 */ \
	41, /* /soc/mspi@50015000 */ \
	42, /* /soc/mspi@50016000 */ \
	43, /* /soc/rtc@40004200 */ \
	44, /* /soc/serial@4000c400 */ \
	45, /* /soc/serial@4001c000 */ \
	46, /* /soc/spi@50005000 */ \
	47, /* /soc/spi@50006000 */ \
	48, /* /soc/spi@50007000 */ \
	49, /* /soc/spi@50008000 */ \
	50, /* /soc/spi@50009000 */ \
	51, /* /soc/timer@e000e010 */ \
	52, /* /soc/flash-controller@40018000 */ \
	58, /* /soc/i2c@50005000 */ \
	60, /* /soc/i2c@50007000 */ \
	63, /* /soc/spi@50004000 */ \
	65, /* /soc/timers@0 */ \
	67, /* /soc/timers@1 */ \
	69, /* /soc/timers@2 */ \
	71, /* /soc/timers@3 */ \
	73, /* /soc/timers@4 */ \
	75, /* /soc/timers@5 */ \
	77, /* /soc/timers@7 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Special property macros: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40010000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40010000
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40010000_PATH "/soc/pin-controller@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40010000_FULL_NAME "pin-controller@40010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_40010000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pin_controller_40010000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800)
#define DT_N_S_soc_S_pin_controller_40010000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40010000_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40010000_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40010000_SUPPORTS_ORDS \
	15, /* /soc/pin-controller@40010000/gpio@40010800 */ \
	17, /* /soc/pin-controller@40010000/gpio@40010000 */ \
	62, /* /soc/pin-controller@40010000/gpio@40010400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40010000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinmux DT_N_S_soc_S_pin_controller_40010000
#define DT_N_NODELABEL_pinctrl      DT_N_S_soc_S_pin_controller_40010000

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40010000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_pin_controller_40010000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40010000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40010000_COMPAT_MATCHES_st_stm32_pinmux 1
#define DT_N_S_soc_S_pin_controller_40010000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40010000_P_compatible {"st,stm32-pinmux"}
#define DT_N_S_soc_S_pin_controller_40010000_P_compatible_IDX_0 "st,stm32-pinmux"
#define DT_N_S_soc_S_pin_controller_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_P_reg {1073807360 /* 0x40010000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_pin_controller_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40010000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40010000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40010000/gpio@40010800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800
 *
 * Binding (compatible = ambiq,apollo3p-gpio):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/gpio/ambiq,apollo3p-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_PATH "/soc/pin-controller@40010000/gpio@40010800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_FULL_NAME "gpio@40010800"

/* Node parent (/soc/pin-controller@40010000) identifier: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_PARENT DT_N_S_soc_S_pin_controller_40010000
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_REQUIRES_ORDS \
	14, /* /soc/pin-controller@40010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_SUPPORTS_ORDS \
	16, /* /gpio_keys/button-1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_EXISTS 1
#define DT_N_INST_2_ambiq_apollo3p_gpio DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800
#define DT_N_NODELABEL_gpio2            DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_REG_IDX_0_VAL_ADDRESS 1073809408 /* 0x40010800 */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_COMPAT_MATCHES_ambiq_apollo3p_gpio 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_reg {1073809408 /* 0x40010800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_reg_IDX_0 1073809408
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, reg, 1)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_label "GPIO_2"
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, label, 4) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, label, 5)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, status, 0) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, status, 1) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, status, 2) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, status, 3)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_compatible {"ambiq,apollo3p-gpio"}
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_compatible_IDX_0 "ambiq,apollo3p-gpio"
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800_P_compatible_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button-1
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_1_PATH "/gpio_keys/button-1"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_1_FULL_NAME "button-1"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_1_PARENT DT_N_S_gpio_keys
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_1_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_1_REQUIRES_ORDS \
	12, /* /gpio_keys */ \
	15, /* /soc/pin-controller@40010000/gpio@40010800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_1_EXISTS 1
#define DT_N_NODELABEL_control_button DT_N_S_gpio_keys_S_button_1

/* Special property macros: */
#define DT_N_S_gpio_keys_S_button_1_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_1_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_1_P_label "Control"
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_1, label, 0) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 1) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 2) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 3) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 4) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 5) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 6)
#define DT_N_S_gpio_keys_S_button_1_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010800
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_pin 7
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_code 6930
#define DT_N_S_gpio_keys_S_button_1_P_code_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40010000/gpio@40010000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000
 *
 * Binding (compatible = ambiq,apollo3p-gpio):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/gpio/ambiq,apollo3p-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_PATH "/soc/pin-controller@40010000/gpio@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_FULL_NAME "gpio@40010000"

/* Node parent (/soc/pin-controller@40010000) identifier: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_PARENT DT_N_S_soc_S_pin_controller_40010000
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_REQUIRES_ORDS \
	14, /* /soc/pin-controller@40010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_SUPPORTS_ORDS \
	18, /* /gpio_keys/button-2 */ \
	59, /* /soc/i2c@50005000/mmc5603@30 */ \
	61, /* /soc/i2c@50007000/cw6305@0B */ \
	63, /* /soc/spi@50004000 */ \
	64, /* /soc/spi@50004000/icm42607@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_EXISTS 1
#define DT_N_INST_0_ambiq_apollo3p_gpio DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000
#define DT_N_NODELABEL_gpio0            DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_COMPAT_MATCHES_ambiq_apollo3p_gpio 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_reg {1073807360 /* 0x40010000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_label "GPIO_0"
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, label, 4) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, label, 5)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, status, 0) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, status, 1) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, status, 2) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, status, 3)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_compatible {"ambiq,apollo3p-gpio"}
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_compatible_IDX_0 "ambiq,apollo3p-gpio"
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000_P_compatible_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button-2
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_2_PATH "/gpio_keys/button-2"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_2_FULL_NAME "button-2"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_2_PARENT DT_N_S_gpio_keys
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_2_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_2_REQUIRES_ORDS \
	12, /* /gpio_keys */ \
	17, /* /soc/pin-controller@40010000/gpio@40010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_2_EXISTS 1
#define DT_N_NODELABEL_home_button DT_N_S_gpio_keys_S_button_2

/* Special property macros: */
#define DT_N_S_gpio_keys_S_button_2_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_2_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_2_P_label "Home"
#define DT_N_S_gpio_keys_S_button_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_2, label, 0) \
	fn(DT_N_S_gpio_keys_S_button_2, label, 1) \
	fn(DT_N_S_gpio_keys_S_button_2, label, 2) \
	fn(DT_N_S_gpio_keys_S_button_2, label, 3)
#define DT_N_S_gpio_keys_S_button_2_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_pin 16
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_2, gpios, 0)
#define DT_N_S_gpio_keys_S_button_2_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_code 6916
#define DT_N_S_gpio_keys_S_button_2_P_code_EXISTS 1

/*
 * Devicetree node: /mspi-nor
 *
 * Node identifier: DT_N_S_mspi_nor
 *
 * Binding (compatible = gd,mspi-nor):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/mtd/gd,mspi-nor.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mspi_nor_PATH "/mspi-nor"

/* Node's name with unit-address: */
#define DT_N_S_mspi_nor_FULL_NAME "mspi-nor"

/* Node parent (/) identifier: */
#define DT_N_S_mspi_nor_PARENT DT_N
#define DT_N_S_mspi_nor_FOREACH_CHILD(fn) fn(DT_N_S_mspi_nor_S_partitions)
#define DT_N_S_mspi_nor_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_mspi_nor_S_partitions) 

/* Node's dependency ordinal: */
#define DT_N_S_mspi_nor_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mspi_nor_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mspi_nor_SUPPORTS_ORDS \
	20, /* /mspi-nor/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_mspi_nor_EXISTS 1
#define DT_N_INST_0_gd_mspi_nor DT_N_S_mspi_nor

/* Special property macros: */
#define DT_N_S_mspi_nor_REG_NUM 0
#define DT_N_S_mspi_nor_IRQ_NUM 0
#define DT_N_S_mspi_nor_COMPAT_MATCHES_gd_mspi_nor 1
#define DT_N_S_mspi_nor_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_mspi_nor_P_label "MSPI-NOR"
#define DT_N_S_mspi_nor_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor, label, 0) \
	fn(DT_N_S_mspi_nor, label, 1) \
	fn(DT_N_S_mspi_nor, label, 2) \
	fn(DT_N_S_mspi_nor, label, 3) \
	fn(DT_N_S_mspi_nor, label, 4) \
	fn(DT_N_S_mspi_nor, label, 5) \
	fn(DT_N_S_mspi_nor, label, 6) \
	fn(DT_N_S_mspi_nor, label, 7)
#define DT_N_S_mspi_nor_P_label_EXISTS 1

/*
 * Devicetree node: /mspi-nor/partitions
 *
 * Node identifier: DT_N_S_mspi_nor_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   /home/wt/zephyr-kit/zephyr_pkg/zephyr/dts/bindings/mtd/partition.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mspi_nor_S_partitions_PATH "/mspi-nor/partitions"

/* Node's name with unit-address: */
#define DT_N_S_mspi_nor_S_partitions_FULL_NAME "partitions"

/* Node parent (/mspi-nor) identifier: */
#define DT_N_S_mspi_nor_S_partitions_PARENT DT_N_S_mspi_nor
#define DT_N_S_mspi_nor_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_0) fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1200000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1600000)
#define DT_N_S_mspi_nor_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_0) fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1200000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1600000) 

/* Node's dependency ordinal: */
#define DT_N_S_mspi_nor_S_partitions_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mspi_nor_S_partitions_REQUIRES_ORDS \
	19, /* /mspi-nor */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mspi_nor_S_partitions_SUPPORTS_ORDS \
	21, /* /mspi-nor/partitions/partition@0 */ \
	22, /* /mspi-nor/partitions/partition@800000 */ \
	23, /* /mspi-nor/partitions/partition@A00000 */ \
	24, /* /mspi-nor/partitions/partition@C00000 */ \
	25, /* /mspi-nor/partitions/partition@E00000 */ \
	26, /* /mspi-nor/partitions/partition@1000000 */ \
	27, /* /mspi-nor/partitions/partition@1200000 */ \
	28, /* /mspi-nor/partitions/partition@1400000 */ \
	29, /* /mspi-nor/partitions/partition@1600000 */

/* Existence and alternate IDs: */
#define DT_N_S_mspi_nor_S_partitions_EXISTS 1
#define DT_N_INST_1_fixed_partitions DT_N_S_mspi_nor_S_partitions

/* Special property macros: */
#define DT_N_S_mspi_nor_S_partitions_REG_NUM 0
#define DT_N_S_mspi_nor_S_partitions_IRQ_NUM 0
#define DT_N_S_mspi_nor_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_mspi_nor_S_partitions_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /mspi-nor/partitions/partition@0
 *
 * Node identifier: DT_N_S_mspi_nor_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_PATH "/mspi-nor/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/mspi-nor/partitions) identifier: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_PARENT DT_N_S_mspi_nor_S_partitions
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_REQUIRES_ORDS \
	20, /* /mspi-nor/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_resource_partition DT_N_S_mspi_nor_S_partitions_S_partition_0

/* Special property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 8388608 /* 0x800000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_STATUS_okay 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_label "resource_img"
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 1) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 2) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 3) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 4) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 5) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 6) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 7) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 8) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 9) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 10) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, label, 11)
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 8388608 /* 0x800000 */}
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_reg_IDX_1 8388608
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, reg, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_mspi_nor_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /mspi-nor/partitions/partition@800000
 *
 * Node identifier: DT_N_S_mspi_nor_S_partitions_S_partition_800000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_PATH "/mspi-nor/partitions/partition@800000"

/* Node's name with unit-address: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_FULL_NAME "partition@800000"

/* Node parent (/mspi-nor/partitions) identifier: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_PARENT DT_N_S_mspi_nor_S_partitions
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_FOREACH_CHILD(fn) 
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_REQUIRES_ORDS \
	20, /* /mspi-nor/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_EXISTS 1
#define DT_N_NODELABEL_watch_face_theme1_partition DT_N_S_mspi_nor_S_partitions_S_partition_800000

/* Special property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_REG_NUM 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_REG_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_REG_IDX_0_VAL_ADDRESS 8388608 /* 0x800000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_IRQ_NUM 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_STATUS_okay 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_label "watch_face_1"
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 1) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 2) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 3) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 4) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 5) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 6) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 7) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 8) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 9) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 10) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, label, 11)
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_label_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_read_only 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_read_only_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_reg {8388608 /* 0x800000 */, 2097152 /* 0x200000 */}
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_reg_IDX_0 8388608
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_reg_IDX_1 2097152
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, reg, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_800000, reg, 1)
#define DT_N_S_mspi_nor_S_partitions_S_partition_800000_P_reg_EXISTS 1

/*
 * Devicetree node: /mspi-nor/partitions/partition@A00000
 *
 * Node identifier: DT_N_S_mspi_nor_S_partitions_S_partition_a00000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_PATH "/mspi-nor/partitions/partition@A00000"

/* Node's name with unit-address: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_FULL_NAME "partition@A00000"

/* Node parent (/mspi-nor/partitions) identifier: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_PARENT DT_N_S_mspi_nor_S_partitions
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_FOREACH_CHILD(fn) 
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_REQUIRES_ORDS \
	20, /* /mspi-nor/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_EXISTS 1
#define DT_N_NODELABEL_watch_face_theme2_partition DT_N_S_mspi_nor_S_partitions_S_partition_a00000

/* Special property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_REG_NUM 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_REG_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_REG_IDX_0_VAL_ADDRESS 10485760 /* 0xa00000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_IRQ_NUM 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_STATUS_okay 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_label "watch_face_2"
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 1) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 2) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 3) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 4) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 5) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 6) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 7) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 8) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 9) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 10) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, label, 11)
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_label_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_read_only 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_read_only_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_reg {10485760 /* 0xa00000 */, 2097152 /* 0x200000 */}
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_reg_IDX_0 10485760
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_reg_IDX_1 2097152
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, reg, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_a00000, reg, 1)
#define DT_N_S_mspi_nor_S_partitions_S_partition_a00000_P_reg_EXISTS 1

/*
 * Devicetree node: /mspi-nor/partitions/partition@C00000
 *
 * Node identifier: DT_N_S_mspi_nor_S_partitions_S_partition_c00000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_PATH "/mspi-nor/partitions/partition@C00000"

/* Node's name with unit-address: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_FULL_NAME "partition@C00000"

/* Node parent (/mspi-nor/partitions) identifier: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_PARENT DT_N_S_mspi_nor_S_partitions
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_FOREACH_CHILD(fn) 
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_REQUIRES_ORDS \
	20, /* /mspi-nor/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_EXISTS 1
#define DT_N_NODELABEL_watch_face_theme3_partition DT_N_S_mspi_nor_S_partitions_S_partition_c00000

/* Special property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_REG_NUM 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_REG_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_REG_IDX_0_VAL_ADDRESS 12582912 /* 0xc00000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_IRQ_NUM 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_STATUS_okay 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_label "watch_face_3"
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 1) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 2) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 3) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 4) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 5) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 6) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 7) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 8) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 9) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 10) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, label, 11)
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_label_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_read_only 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_read_only_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_reg {12582912 /* 0xc00000 */, 2097152 /* 0x200000 */}
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_reg_IDX_0 12582912
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_reg_IDX_1 2097152
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, reg, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_c00000, reg, 1)
#define DT_N_S_mspi_nor_S_partitions_S_partition_c00000_P_reg_EXISTS 1

/*
 * Devicetree node: /mspi-nor/partitions/partition@E00000
 *
 * Node identifier: DT_N_S_mspi_nor_S_partitions_S_partition_e00000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_PATH "/mspi-nor/partitions/partition@E00000"

/* Node's name with unit-address: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_FULL_NAME "partition@E00000"

/* Node parent (/mspi-nor/partitions) identifier: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_PARENT DT_N_S_mspi_nor_S_partitions
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_FOREACH_CHILD(fn) 
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_REQUIRES_ORDS \
	20, /* /mspi-nor/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_EXISTS 1
#define DT_N_NODELABEL_watch_face_theme4_partition DT_N_S_mspi_nor_S_partitions_S_partition_e00000

/* Special property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_REG_NUM 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_REG_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_REG_IDX_0_VAL_ADDRESS 14680064 /* 0xe00000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_IRQ_NUM 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_STATUS_okay 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_label "watch_face_4"
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 1) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 2) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 3) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 4) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 5) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 6) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 7) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 8) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 9) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 10) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, label, 11)
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_label_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_read_only 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_read_only_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_reg {14680064 /* 0xe00000 */, 2097152 /* 0x200000 */}
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_reg_IDX_0 14680064
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_reg_IDX_1 2097152
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, reg, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_e00000, reg, 1)
#define DT_N_S_mspi_nor_S_partitions_S_partition_e00000_P_reg_EXISTS 1

/*
 * Devicetree node: /mspi-nor/partitions/partition@1000000
 *
 * Node identifier: DT_N_S_mspi_nor_S_partitions_S_partition_1000000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_PATH "/mspi-nor/partitions/partition@1000000"

/* Node's name with unit-address: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_FULL_NAME "partition@1000000"

/* Node parent (/mspi-nor/partitions) identifier: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_PARENT DT_N_S_mspi_nor_S_partitions
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_FOREACH_CHILD(fn) 
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_REQUIRES_ORDS \
	20, /* /mspi-nor/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_EXISTS 1
#define DT_N_NODELABEL_watch_face_theme5_partition DT_N_S_mspi_nor_S_partitions_S_partition_1000000

/* Special property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_REG_NUM 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_REG_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_REG_IDX_0_VAL_ADDRESS 16777216 /* 0x1000000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_IRQ_NUM 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_STATUS_okay 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_PARTITION_ID 5

/* Generic property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_label "watch_face_5"
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 1) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 2) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 3) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 4) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 5) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 6) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 7) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 8) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 9) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 10) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, label, 11)
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_label_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_read_only 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_read_only_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_reg {16777216 /* 0x1000000 */, 2097152 /* 0x200000 */}
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_reg_IDX_0 16777216
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_reg_IDX_1 2097152
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, reg, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1000000, reg, 1)
#define DT_N_S_mspi_nor_S_partitions_S_partition_1000000_P_reg_EXISTS 1

/*
 * Devicetree node: /mspi-nor/partitions/partition@1200000
 *
 * Node identifier: DT_N_S_mspi_nor_S_partitions_S_partition_1200000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_PATH "/mspi-nor/partitions/partition@1200000"

/* Node's name with unit-address: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_FULL_NAME "partition@1200000"

/* Node parent (/mspi-nor/partitions) identifier: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_PARENT DT_N_S_mspi_nor_S_partitions
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_FOREACH_CHILD(fn) 
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_REQUIRES_ORDS \
	20, /* /mspi-nor/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_mspi_nor_S_partitions_S_partition_1200000

/* Special property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_REG_NUM 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_REG_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_REG_IDX_0_VAL_ADDRESS 18874368 /* 0x1200000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_IRQ_NUM 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_STATUS_okay 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_PARTITION_ID 6

/* Generic property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_label "storage"
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1200000, label, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1200000, label, 1) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1200000, label, 2) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1200000, label, 3) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1200000, label, 4) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1200000, label, 5) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1200000, label, 6)
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_label_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_read_only 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_read_only_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_reg {18874368 /* 0x1200000 */, 2097152 /* 0x200000 */}
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_reg_IDX_0 18874368
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_reg_IDX_1 2097152
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1200000, reg, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1200000, reg, 1)
#define DT_N_S_mspi_nor_S_partitions_S_partition_1200000_P_reg_EXISTS 1

/*
 * Devicetree node: /mspi-nor/partitions/partition@1400000
 *
 * Node identifier: DT_N_S_mspi_nor_S_partitions_S_partition_1400000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_PATH "/mspi-nor/partitions/partition@1400000"

/* Node's name with unit-address: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_FULL_NAME "partition@1400000"

/* Node parent (/mspi-nor/partitions) identifier: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_PARENT DT_N_S_mspi_nor_S_partitions
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_FOREACH_CHILD(fn) 
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_REQUIRES_ORDS \
	20, /* /mspi-nor/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_EXISTS 1
#define DT_N_NODELABEL_update_partition DT_N_S_mspi_nor_S_partitions_S_partition_1400000

/* Special property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_REG_NUM 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_REG_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_REG_IDX_0_VAL_ADDRESS 20971520 /* 0x1400000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_IRQ_NUM 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_STATUS_okay 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_PARTITION_ID 7

/* Generic property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_label "update_img"
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, label, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, label, 1) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, label, 2) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, label, 3) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, label, 4) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, label, 5) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, label, 6) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, label, 7) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, label, 8) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, label, 9)
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_label_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_read_only 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_read_only_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_reg {20971520 /* 0x1400000 */, 2097152 /* 0x200000 */}
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_reg_IDX_0 20971520
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_reg_IDX_1 2097152
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, reg, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1400000, reg, 1)
#define DT_N_S_mspi_nor_S_partitions_S_partition_1400000_P_reg_EXISTS 1

/*
 * Devicetree node: /mspi-nor/partitions/partition@1600000
 *
 * Node identifier: DT_N_S_mspi_nor_S_partitions_S_partition_1600000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_PATH "/mspi-nor/partitions/partition@1600000"

/* Node's name with unit-address: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_FULL_NAME "partition@1600000"

/* Node parent (/mspi-nor/partitions) identifier: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_PARENT DT_N_S_mspi_nor_S_partitions
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_FOREACH_CHILD(fn) 
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_REQUIRES_ORDS \
	20, /* /mspi-nor/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_EXISTS 1
#define DT_N_NODELABEL_file_system DT_N_S_mspi_nor_S_partitions_S_partition_1600000

/* Special property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_REG_NUM 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_REG_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_REG_IDX_0_VAL_ADDRESS 23068672 /* 0x1600000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_REG_IDX_0_VAL_SIZE 10485760 /* 0xa00000 */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_IRQ_NUM 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_STATUS_okay 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_PARTITION_ID 8

/* Generic property macros: */
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_label "fs"
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1600000, label, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1600000, label, 1)
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_label_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_read_only 0
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_read_only_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_reg {23068672 /* 0x1600000 */, 10485760 /* 0xa00000 */}
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_reg_IDX_0 23068672
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_reg_IDX_1 10485760
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mspi_nor_S_partitions_S_partition_1600000, reg, 0) \
	fn(DT_N_S_mspi_nor_S_partitions_S_partition_1600000, reg, 1)
#define DT_N_S_mspi_nor_S_partitions_S_partition_1600000_P_reg_EXISTS 1

/*
 * Devicetree node: /pwmmotor
 *
 * Node identifier: DT_N_S_pwmmotor
 *
 * Binding (compatible = pwm-motors):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/led/pwm-motors.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmmotor_PATH "/pwmmotor"

/* Node's name with unit-address: */
#define DT_N_S_pwmmotor_FULL_NAME "pwmmotor"

/* Node parent (/) identifier: */
#define DT_N_S_pwmmotor_PARENT DT_N
#define DT_N_S_pwmmotor_FOREACH_CHILD(fn) fn(DT_N_S_pwmmotor_S_motor)
#define DT_N_S_pwmmotor_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pwmmotor_S_motor) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmmotor_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmmotor_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmmotor_SUPPORTS_ORDS \
	33, /* /pwmmotor/motor */

/* Existence and alternate IDs: */
#define DT_N_S_pwmmotor_EXISTS 1
#define DT_N_INST_0_pwm_motors DT_N_S_pwmmotor

/* Special property macros: */
#define DT_N_S_pwmmotor_REG_NUM 0
#define DT_N_S_pwmmotor_IRQ_NUM 0
#define DT_N_S_pwmmotor_COMPAT_MATCHES_pwm_motors 1
#define DT_N_S_pwmmotor_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_pwmmotor_P_compatible {"pwm-motors"}
#define DT_N_S_pwmmotor_P_compatible_IDX_0 "pwm-motors"
#define DT_N_S_pwmmotor_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pwmmotor_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmmotor, compatible, 0)
#define DT_N_S_pwmmotor_P_compatible_LEN 1
#define DT_N_S_pwmmotor_P_compatible_EXISTS 1
#define DT_N_S_pwmmotor_P_label "MOTOR"
#define DT_N_S_pwmmotor_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmmotor, label, 0) \
	fn(DT_N_S_pwmmotor, label, 1) \
	fn(DT_N_S_pwmmotor, label, 2) \
	fn(DT_N_S_pwmmotor, label, 3) \
	fn(DT_N_S_pwmmotor, label, 4)
#define DT_N_S_pwmmotor_P_label_EXISTS 1

/*
 * Devicetree node: /soc/timers@6
 *
 * Node identifier: DT_N_S_soc_S_timers_6
 *
 * Binding (compatible = ambiq,apollo3p-timers):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/timer/ambiq,apollo3p-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_6_PATH "/soc/timers@6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_6_FULL_NAME "timers@6"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_6_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_6_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_6_S_pwm)
#define DT_N_S_soc_S_timers_6_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timers_6_S_pwm) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_6_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_6_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_6_SUPPORTS_ORDS \
	32, /* /soc/timers@6/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_6_EXISTS 1
#define DT_N_INST_1_ambiq_apollo3p_timers DT_N_S_soc_S_timers_6
#define DT_N_NODELABEL_ctimer6            DT_N_S_soc_S_timers_6

/* Special property macros: */
#define DT_N_S_soc_S_timers_6_REG_NUM 1
#define DT_N_S_soc_S_timers_6_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_6_REG_IDX_0_VAL_ADDRESS 6 /* 0x6 */
#define DT_N_S_soc_S_timers_6_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timers_6_IRQ_NUM 0
#define DT_N_S_soc_S_timers_6_COMPAT_MATCHES_ambiq_apollo3p_timers 1
#define DT_N_S_soc_S_timers_6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_6_P_label "CTIMER_6"
#define DT_N_S_soc_S_timers_6_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_6, label, 0) \
	fn(DT_N_S_soc_S_timers_6, label, 1) \
	fn(DT_N_S_soc_S_timers_6, label, 2) \
	fn(DT_N_S_soc_S_timers_6, label, 3) \
	fn(DT_N_S_soc_S_timers_6, label, 4) \
	fn(DT_N_S_soc_S_timers_6, label, 5) \
	fn(DT_N_S_soc_S_timers_6, label, 6) \
	fn(DT_N_S_soc_S_timers_6, label, 7)
#define DT_N_S_soc_S_timers_6_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_6_P_reg {6 /* 0x6 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timers_6_P_reg_IDX_0 6
#define DT_N_S_soc_S_timers_6_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_6_P_reg_IDX_1 32
#define DT_N_S_soc_S_timers_6_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_6_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_6, reg, 0) \
	fn(DT_N_S_soc_S_timers_6, reg, 1)
#define DT_N_S_soc_S_timers_6_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_6_P_clock_source {4 /* 0x4 */}
#define DT_N_S_soc_S_timers_6_P_clock_source_IDX_0 4
#define DT_N_S_soc_S_timers_6_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_6_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_6, clock_source, 0)
#define DT_N_S_soc_S_timers_6_P_clock_source_LEN 1
#define DT_N_S_soc_S_timers_6_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_timers_6_P_status "okay"
#define DT_N_S_soc_S_timers_6_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_6_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_6_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_6_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_6, status, 0) \
	fn(DT_N_S_soc_S_timers_6, status, 1) \
	fn(DT_N_S_soc_S_timers_6, status, 2) \
	fn(DT_N_S_soc_S_timers_6, status, 3)
#define DT_N_S_soc_S_timers_6_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_6_P_compatible {"ambiq,apollo3p-timers"}
#define DT_N_S_soc_S_timers_6_P_compatible_IDX_0 "ambiq,apollo3p-timers"
#define DT_N_S_soc_S_timers_6_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_6_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_6, compatible, 0)
#define DT_N_S_soc_S_timers_6_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_6_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@6/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_6_S_pwm
 *
 * Binding (compatible = ambiq,apollo3p-pwm):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/pwm/ambiq,apollo3p-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_6_S_pwm_PATH "/soc/timers@6/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_6_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@6) identifier: */
#define DT_N_S_soc_S_timers_6_S_pwm_PARENT DT_N_S_soc_S_timers_6
#define DT_N_S_soc_S_timers_6_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_6_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_6_S_pwm_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_6_S_pwm_REQUIRES_ORDS \
	31, /* /soc/timers@6 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_6_S_pwm_SUPPORTS_ORDS \
	33, /* /pwmmotor/motor */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_6_S_pwm_EXISTS 1
#define DT_N_INST_1_ambiq_apollo3p_pwm DT_N_S_soc_S_timers_6_S_pwm
#define DT_N_NODELABEL_pwm6            DT_N_S_soc_S_timers_6_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_6_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_6_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_6_S_pwm_COMPAT_MATCHES_ambiq_apollo3p_pwm 1
#define DT_N_S_soc_S_timers_6_S_pwm_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_6_S_pwm_P_ch0_pin 45
#define DT_N_S_soc_S_timers_6_S_pwm_P_ch0_pin_EXISTS 1
#define DT_N_S_soc_S_timers_6_S_pwm_P_ch1_pin 255
#define DT_N_S_soc_S_timers_6_S_pwm_P_ch1_pin_EXISTS 1
#define DT_N_S_soc_S_timers_6_S_pwm_P_label "PWM_6"
#define DT_N_S_soc_S_timers_6_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_6_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_6_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_6_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_6_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_6_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_6_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_6_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timers_6_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_6_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_6_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_6_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_6_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_6_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_6_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_6_S_pwm, status, 3)
#define DT_N_S_soc_S_timers_6_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_6_S_pwm_P_compatible {"ambiq,apollo3p-pwm"}
#define DT_N_S_soc_S_timers_6_S_pwm_P_compatible_IDX_0 "ambiq,apollo3p-pwm"
#define DT_N_S_soc_S_timers_6_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_6_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_6_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_6_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_6_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /pwmmotor/motor
 *
 * Node identifier: DT_N_S_pwmmotor_S_motor
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmmotor_S_motor_PATH "/pwmmotor/motor"

/* Node's name with unit-address: */
#define DT_N_S_pwmmotor_S_motor_FULL_NAME "motor"

/* Node parent (/pwmmotor) identifier: */
#define DT_N_S_pwmmotor_S_motor_PARENT DT_N_S_pwmmotor
#define DT_N_S_pwmmotor_S_motor_FOREACH_CHILD(fn) 
#define DT_N_S_pwmmotor_S_motor_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmmotor_S_motor_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmmotor_S_motor_REQUIRES_ORDS \
	30, /* /pwmmotor */ \
	32, /* /soc/timers@6/pwm */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmmotor_S_motor_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmmotor_S_motor_EXISTS 1
#define DT_N_NODELABEL_motor DT_N_S_pwmmotor_S_motor

/* Special property macros: */
#define DT_N_S_pwmmotor_S_motor_REG_NUM 0
#define DT_N_S_pwmmotor_S_motor_IRQ_NUM 0
#define DT_N_S_pwmmotor_S_motor_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_pwmmotor_S_motor_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmmotor_S_motor_P_pwms_IDX_0_PH DT_N_S_soc_S_timers_6_S_pwm
#define DT_N_S_pwmmotor_S_motor_P_pwms_IDX_0_VAL_channel 0
#define DT_N_S_pwmmotor_S_motor_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmmotor_S_motor_P_pwms_IDX_0_VAL_period 1
#define DT_N_S_pwmmotor_S_motor_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmmotor_S_motor_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmmotor_S_motor_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmmotor_S_motor_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmmotor_S_motor, pwms, 0)
#define DT_N_S_pwmmotor_S_motor_P_pwms_LEN 1
#define DT_N_S_pwmmotor_S_motor_P_pwms_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   /home/wt/zephyr-kit/zephyr_pkg/zephyr/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	35, /* /soc/adc@50010000 */ \
	36, /* /soc/i2c@50004000 */ \
	37, /* /soc/i2c@50006000 */ \
	38, /* /soc/i2c@50008000 */ \
	39, /* /soc/i2c@50009000 */ \
	40, /* /soc/mspi@50014000 */ \
	41, /* /soc/mspi@50015000 */ \
	42, /* /soc/mspi@50016000 */ \
	43, /* /soc/rtc@40004200 */ \
	44, /* /soc/serial@4000c400 */ \
	45, /* /soc/serial@4001c000 */ \
	46, /* /soc/spi@50005000 */ \
	47, /* /soc/spi@50006000 */ \
	48, /* /soc/spi@50007000 */ \
	49, /* /soc/spi@50008000 */ \
	50, /* /soc/spi@50009000 */ \
	58, /* /soc/i2c@50005000 */ \
	60, /* /soc/i2c@50007000 */ \
	63, /* /soc/spi@50004000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Special property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/adc@50010000
 *
 * Node identifier: DT_N_S_soc_S_adc_50010000
 *
 * Binding (compatible = ambiq,apollo3p-adc):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/adc/ambiq,apollo3p-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_50010000_PATH "/soc/adc@50010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_50010000_FULL_NAME "adc@50010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_50010000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_adc_50010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_50010000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_50010000_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_50010000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_50010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_50010000_EXISTS 1
#define DT_N_INST_0_ambiq_apollo3p_adc DT_N_S_soc_S_adc_50010000
#define DT_N_NODELABEL_adc1            DT_N_S_soc_S_adc_50010000

/* Special property macros: */
#define DT_N_S_soc_S_adc_50010000_REG_NUM 1
#define DT_N_S_soc_S_adc_50010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_REG_IDX_0_VAL_ADDRESS 1342242816 /* 0x50010000 */
#define DT_N_S_soc_S_adc_50010000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_50010000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_50010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_50010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_50010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_COMPAT_MATCHES_ambiq_apollo3p_adc 1
#define DT_N_S_soc_S_adc_50010000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_adc_50010000_P_reg {1342242816 /* 0x50010000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_50010000_P_reg_IDX_0 1342242816
#define DT_N_S_soc_S_adc_50010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_50010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50010000, reg, 0) \
	fn(DT_N_S_soc_S_adc_50010000, reg, 1)
#define DT_N_S_soc_S_adc_50010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_50010000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_50010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_50010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50010000, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_50010000, interrupts, 1)
#define DT_N_S_soc_S_adc_50010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_P_label "ADC_1"
#define DT_N_S_soc_S_adc_50010000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50010000, label, 0) \
	fn(DT_N_S_soc_S_adc_50010000, label, 1) \
	fn(DT_N_S_soc_S_adc_50010000, label, 2) \
	fn(DT_N_S_soc_S_adc_50010000, label, 3) \
	fn(DT_N_S_soc_S_adc_50010000, label, 4)
#define DT_N_S_soc_S_adc_50010000_P_label_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_P_status "okay"
#define DT_N_S_soc_S_adc_50010000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_50010000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_50010000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_50010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50010000, status, 0) \
	fn(DT_N_S_soc_S_adc_50010000, status, 1) \
	fn(DT_N_S_soc_S_adc_50010000, status, 2) \
	fn(DT_N_S_soc_S_adc_50010000, status, 3)
#define DT_N_S_soc_S_adc_50010000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_P_compatible {"ambiq,apollo3p-adc"}
#define DT_N_S_soc_S_adc_50010000_P_compatible_IDX_0 "ambiq,apollo3p-adc"
#define DT_N_S_soc_S_adc_50010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50010000, compatible, 0)
#define DT_N_S_soc_S_adc_50010000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_50010000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@50004000
 *
 * Node identifier: DT_N_S_soc_S_i2c_50004000
 *
 * Binding (compatible = ambiq,apollo3p-i2c):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/i2c/ambiq,apollo3p-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_50004000_PATH "/soc/i2c@50004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_50004000_FULL_NAME "i2c@50004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_50004000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_50004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_50004000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_50004000_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_50004000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_50004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_50004000_EXISTS 1
#define DT_N_INST_5_ambiq_apollo3p_i2c DT_N_S_soc_S_i2c_50004000
#define DT_N_NODELABEL_i2c0            DT_N_S_soc_S_i2c_50004000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_50004000_REG_NUM 1
#define DT_N_S_soc_S_i2c_50004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_REG_IDX_0_VAL_ADDRESS 1342193664 /* 0x50004000 */
#define DT_N_S_soc_S_i2c_50004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_50004000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_50004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_i2c_50004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_50004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_COMPAT_MATCHES_ambiq_apollo3p_i2c 1
#define DT_N_S_soc_S_i2c_50004000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_50004000_P_reg {1342193664 /* 0x50004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_50004000_P_reg_IDX_0 1342193664
#define DT_N_S_soc_S_i2c_50004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_50004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50004000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_50004000, reg, 1)
#define DT_N_S_soc_S_i2c_50004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_P_interrupts {6 /* 0x6 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_50004000_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_i2c_50004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_50004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50004000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_50004000, interrupts, 1)
#define DT_N_S_soc_S_i2c_50004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_50004000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_P_label "I2C_0"
#define DT_N_S_soc_S_i2c_50004000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50004000, label, 0) \
	fn(DT_N_S_soc_S_i2c_50004000, label, 1) \
	fn(DT_N_S_soc_S_i2c_50004000, label, 2) \
	fn(DT_N_S_soc_S_i2c_50004000, label, 3) \
	fn(DT_N_S_soc_S_i2c_50004000, label, 4)
#define DT_N_S_soc_S_i2c_50004000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_P_status "disabled"
#define DT_N_S_soc_S_i2c_50004000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_50004000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_50004000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_50004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50004000, status, 0) \
	fn(DT_N_S_soc_S_i2c_50004000, status, 1) \
	fn(DT_N_S_soc_S_i2c_50004000, status, 2) \
	fn(DT_N_S_soc_S_i2c_50004000, status, 3) \
	fn(DT_N_S_soc_S_i2c_50004000, status, 4) \
	fn(DT_N_S_soc_S_i2c_50004000, status, 5) \
	fn(DT_N_S_soc_S_i2c_50004000, status, 6) \
	fn(DT_N_S_soc_S_i2c_50004000, status, 7)
#define DT_N_S_soc_S_i2c_50004000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_P_compatible {"ambiq,apollo3p-i2c"}
#define DT_N_S_soc_S_i2c_50004000_P_compatible_IDX_0 "ambiq,apollo3p-i2c"
#define DT_N_S_soc_S_i2c_50004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50004000, compatible, 0)
#define DT_N_S_soc_S_i2c_50004000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_50004000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@50006000
 *
 * Node identifier: DT_N_S_soc_S_i2c_50006000
 *
 * Binding (compatible = ambiq,apollo3p-i2c):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/i2c/ambiq,apollo3p-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_50006000_PATH "/soc/i2c@50006000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_50006000_FULL_NAME "i2c@50006000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_50006000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_50006000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_50006000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_50006000_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_50006000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_50006000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_50006000_EXISTS 1
#define DT_N_INST_1_ambiq_apollo3p_i2c DT_N_S_soc_S_i2c_50006000
#define DT_N_NODELABEL_i2c2            DT_N_S_soc_S_i2c_50006000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_50006000_REG_NUM 1
#define DT_N_S_soc_S_i2c_50006000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_REG_IDX_0_VAL_ADDRESS 1342201856 /* 0x50006000 */
#define DT_N_S_soc_S_i2c_50006000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_50006000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_50006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_i2c_50006000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_50006000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_COMPAT_MATCHES_ambiq_apollo3p_i2c 1
#define DT_N_S_soc_S_i2c_50006000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_50006000_P_reg {1342201856 /* 0x50006000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_50006000_P_reg_IDX_0 1342201856
#define DT_N_S_soc_S_i2c_50006000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_50006000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50006000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_50006000, reg, 1)
#define DT_N_S_soc_S_i2c_50006000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_P_interrupts {8 /* 0x8 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_50006000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_i2c_50006000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_50006000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50006000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_50006000, interrupts, 1)
#define DT_N_S_soc_S_i2c_50006000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_50006000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_P_label "I2C_2"
#define DT_N_S_soc_S_i2c_50006000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50006000, label, 0) \
	fn(DT_N_S_soc_S_i2c_50006000, label, 1) \
	fn(DT_N_S_soc_S_i2c_50006000, label, 2) \
	fn(DT_N_S_soc_S_i2c_50006000, label, 3) \
	fn(DT_N_S_soc_S_i2c_50006000, label, 4)
#define DT_N_S_soc_S_i2c_50006000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_P_status "okay"
#define DT_N_S_soc_S_i2c_50006000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_50006000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_50006000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_50006000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50006000, status, 0) \
	fn(DT_N_S_soc_S_i2c_50006000, status, 1) \
	fn(DT_N_S_soc_S_i2c_50006000, status, 2) \
	fn(DT_N_S_soc_S_i2c_50006000, status, 3)
#define DT_N_S_soc_S_i2c_50006000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_P_compatible {"ambiq,apollo3p-i2c"}
#define DT_N_S_soc_S_i2c_50006000_P_compatible_IDX_0 "ambiq,apollo3p-i2c"
#define DT_N_S_soc_S_i2c_50006000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50006000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50006000, compatible, 0)
#define DT_N_S_soc_S_i2c_50006000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_50006000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@50008000
 *
 * Node identifier: DT_N_S_soc_S_i2c_50008000
 *
 * Binding (compatible = ambiq,apollo3p-i2c):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/i2c/ambiq,apollo3p-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_50008000_PATH "/soc/i2c@50008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_50008000_FULL_NAME "i2c@50008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_50008000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_50008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_50008000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_50008000_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_50008000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_50008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_50008000_EXISTS 1
#define DT_N_INST_3_ambiq_apollo3p_i2c DT_N_S_soc_S_i2c_50008000
#define DT_N_NODELABEL_i2c4            DT_N_S_soc_S_i2c_50008000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_50008000_REG_NUM 1
#define DT_N_S_soc_S_i2c_50008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_REG_IDX_0_VAL_ADDRESS 1342210048 /* 0x50008000 */
#define DT_N_S_soc_S_i2c_50008000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_50008000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_50008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_i2c_50008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_50008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_COMPAT_MATCHES_ambiq_apollo3p_i2c 1
#define DT_N_S_soc_S_i2c_50008000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_50008000_P_reg {1342210048 /* 0x50008000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_50008000_P_reg_IDX_0 1342210048
#define DT_N_S_soc_S_i2c_50008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_50008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50008000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_50008000, reg, 1)
#define DT_N_S_soc_S_i2c_50008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_P_interrupts {10 /* 0xa */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_50008000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_i2c_50008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_50008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50008000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_50008000, interrupts, 1)
#define DT_N_S_soc_S_i2c_50008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_50008000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_P_label "I2C_4"
#define DT_N_S_soc_S_i2c_50008000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50008000, label, 0) \
	fn(DT_N_S_soc_S_i2c_50008000, label, 1) \
	fn(DT_N_S_soc_S_i2c_50008000, label, 2) \
	fn(DT_N_S_soc_S_i2c_50008000, label, 3) \
	fn(DT_N_S_soc_S_i2c_50008000, label, 4)
#define DT_N_S_soc_S_i2c_50008000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_P_status "okay"
#define DT_N_S_soc_S_i2c_50008000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_50008000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_50008000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_50008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50008000, status, 0) \
	fn(DT_N_S_soc_S_i2c_50008000, status, 1) \
	fn(DT_N_S_soc_S_i2c_50008000, status, 2) \
	fn(DT_N_S_soc_S_i2c_50008000, status, 3)
#define DT_N_S_soc_S_i2c_50008000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_P_compatible {"ambiq,apollo3p-i2c"}
#define DT_N_S_soc_S_i2c_50008000_P_compatible_IDX_0 "ambiq,apollo3p-i2c"
#define DT_N_S_soc_S_i2c_50008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50008000, compatible, 0)
#define DT_N_S_soc_S_i2c_50008000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_50008000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@50009000
 *
 * Node identifier: DT_N_S_soc_S_i2c_50009000
 *
 * Binding (compatible = ambiq,apollo3p-i2c):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/i2c/ambiq,apollo3p-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_50009000_PATH "/soc/i2c@50009000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_50009000_FULL_NAME "i2c@50009000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_50009000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_50009000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_50009000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_50009000_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_50009000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_50009000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_50009000_EXISTS 1
#define DT_N_INST_4_ambiq_apollo3p_i2c DT_N_S_soc_S_i2c_50009000
#define DT_N_NODELABEL_i2c5            DT_N_S_soc_S_i2c_50009000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_50009000_REG_NUM 1
#define DT_N_S_soc_S_i2c_50009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_REG_IDX_0_VAL_ADDRESS 1342214144 /* 0x50009000 */
#define DT_N_S_soc_S_i2c_50009000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_50009000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_50009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_i2c_50009000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_50009000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_COMPAT_MATCHES_ambiq_apollo3p_i2c 1
#define DT_N_S_soc_S_i2c_50009000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_50009000_P_reg {1342214144 /* 0x50009000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_50009000_P_reg_IDX_0 1342214144
#define DT_N_S_soc_S_i2c_50009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_50009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50009000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_50009000, reg, 1)
#define DT_N_S_soc_S_i2c_50009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_50009000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_i2c_50009000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_50009000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50009000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_50009000, interrupts, 1)
#define DT_N_S_soc_S_i2c_50009000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_50009000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_P_label "I2C_5"
#define DT_N_S_soc_S_i2c_50009000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50009000, label, 0) \
	fn(DT_N_S_soc_S_i2c_50009000, label, 1) \
	fn(DT_N_S_soc_S_i2c_50009000, label, 2) \
	fn(DT_N_S_soc_S_i2c_50009000, label, 3) \
	fn(DT_N_S_soc_S_i2c_50009000, label, 4)
#define DT_N_S_soc_S_i2c_50009000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_P_status "okay"
#define DT_N_S_soc_S_i2c_50009000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_50009000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_50009000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_50009000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50009000, status, 0) \
	fn(DT_N_S_soc_S_i2c_50009000, status, 1) \
	fn(DT_N_S_soc_S_i2c_50009000, status, 2) \
	fn(DT_N_S_soc_S_i2c_50009000, status, 3)
#define DT_N_S_soc_S_i2c_50009000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_P_compatible {"ambiq,apollo3p-i2c"}
#define DT_N_S_soc_S_i2c_50009000_P_compatible_IDX_0 "ambiq,apollo3p-i2c"
#define DT_N_S_soc_S_i2c_50009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50009000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50009000, compatible, 0)
#define DT_N_S_soc_S_i2c_50009000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_50009000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/mspi@50014000
 *
 * Node identifier: DT_N_S_soc_S_mspi_50014000
 *
 * Binding (compatible = ambiq,apollo3p-mspi):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/spi/ambiq,apollo3p-mspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mspi_50014000_PATH "/soc/mspi@50014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mspi_50014000_FULL_NAME "mspi@50014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mspi_50014000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_mspi_50014000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mspi_50014000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mspi_50014000_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mspi_50014000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mspi_50014000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mspi_50014000_EXISTS 1
#define DT_N_INST_0_ambiq_apollo3p_mspi DT_N_S_soc_S_mspi_50014000
#define DT_N_NODELABEL_mspi0            DT_N_S_soc_S_mspi_50014000

/* Special property macros: */
#define DT_N_S_soc_S_mspi_50014000_REG_NUM 1
#define DT_N_S_soc_S_mspi_50014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_REG_IDX_0_VAL_ADDRESS 1342259200 /* 0x50014000 */
#define DT_N_S_soc_S_mspi_50014000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mspi_50014000_IRQ_NUM 1
#define DT_N_S_soc_S_mspi_50014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_mspi_50014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mspi_50014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_COMPAT_MATCHES_ambiq_apollo3p_mspi 1
#define DT_N_S_soc_S_mspi_50014000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_mspi_50014000_P_reg {1342259200 /* 0x50014000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mspi_50014000_P_reg_IDX_0 1342259200
#define DT_N_S_soc_S_mspi_50014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mspi_50014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50014000, reg, 0) \
	fn(DT_N_S_soc_S_mspi_50014000, reg, 1)
#define DT_N_S_soc_S_mspi_50014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_P_interrupts {20 /* 0x14 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mspi_50014000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_mspi_50014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mspi_50014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50014000, interrupts, 0) \
	fn(DT_N_S_soc_S_mspi_50014000, interrupts, 1)
#define DT_N_S_soc_S_mspi_50014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_P_label "MSPI_0"
#define DT_N_S_soc_S_mspi_50014000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50014000, label, 0) \
	fn(DT_N_S_soc_S_mspi_50014000, label, 1) \
	fn(DT_N_S_soc_S_mspi_50014000, label, 2) \
	fn(DT_N_S_soc_S_mspi_50014000, label, 3) \
	fn(DT_N_S_soc_S_mspi_50014000, label, 4) \
	fn(DT_N_S_soc_S_mspi_50014000, label, 5)
#define DT_N_S_soc_S_mspi_50014000_P_label_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_P_status "okay"
#define DT_N_S_soc_S_mspi_50014000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_mspi_50014000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_mspi_50014000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mspi_50014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50014000, status, 0) \
	fn(DT_N_S_soc_S_mspi_50014000, status, 1) \
	fn(DT_N_S_soc_S_mspi_50014000, status, 2) \
	fn(DT_N_S_soc_S_mspi_50014000, status, 3)
#define DT_N_S_soc_S_mspi_50014000_P_status_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_P_compatible {"ambiq,apollo3p-mspi"}
#define DT_N_S_soc_S_mspi_50014000_P_compatible_IDX_0 "ambiq,apollo3p-mspi"
#define DT_N_S_soc_S_mspi_50014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50014000, compatible, 0)
#define DT_N_S_soc_S_mspi_50014000_P_compatible_LEN 1
#define DT_N_S_soc_S_mspi_50014000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/mspi@50015000
 *
 * Node identifier: DT_N_S_soc_S_mspi_50015000
 *
 * Binding (compatible = ambiq,apollo3p-mspi):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/spi/ambiq,apollo3p-mspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mspi_50015000_PATH "/soc/mspi@50015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mspi_50015000_FULL_NAME "mspi@50015000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mspi_50015000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_mspi_50015000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mspi_50015000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mspi_50015000_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mspi_50015000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mspi_50015000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mspi_50015000_EXISTS 1
#define DT_N_INST_1_ambiq_apollo3p_mspi DT_N_S_soc_S_mspi_50015000
#define DT_N_NODELABEL_mspi1            DT_N_S_soc_S_mspi_50015000

/* Special property macros: */
#define DT_N_S_soc_S_mspi_50015000_REG_NUM 1
#define DT_N_S_soc_S_mspi_50015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_REG_IDX_0_VAL_ADDRESS 1342263296 /* 0x50015000 */
#define DT_N_S_soc_S_mspi_50015000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mspi_50015000_IRQ_NUM 1
#define DT_N_S_soc_S_mspi_50015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_IRQ_IDX_0_VAL_irq 32
#define DT_N_S_soc_S_mspi_50015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mspi_50015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_COMPAT_MATCHES_ambiq_apollo3p_mspi 1
#define DT_N_S_soc_S_mspi_50015000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_mspi_50015000_P_reg {1342263296 /* 0x50015000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mspi_50015000_P_reg_IDX_0 1342263296
#define DT_N_S_soc_S_mspi_50015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mspi_50015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50015000, reg, 0) \
	fn(DT_N_S_soc_S_mspi_50015000, reg, 1)
#define DT_N_S_soc_S_mspi_50015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_P_interrupts {32 /* 0x20 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mspi_50015000_P_interrupts_IDX_0 32
#define DT_N_S_soc_S_mspi_50015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mspi_50015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50015000, interrupts, 0) \
	fn(DT_N_S_soc_S_mspi_50015000, interrupts, 1)
#define DT_N_S_soc_S_mspi_50015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_P_label "MSPI_1"
#define DT_N_S_soc_S_mspi_50015000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50015000, label, 0) \
	fn(DT_N_S_soc_S_mspi_50015000, label, 1) \
	fn(DT_N_S_soc_S_mspi_50015000, label, 2) \
	fn(DT_N_S_soc_S_mspi_50015000, label, 3) \
	fn(DT_N_S_soc_S_mspi_50015000, label, 4) \
	fn(DT_N_S_soc_S_mspi_50015000, label, 5)
#define DT_N_S_soc_S_mspi_50015000_P_label_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_P_status "okay"
#define DT_N_S_soc_S_mspi_50015000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_mspi_50015000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_mspi_50015000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mspi_50015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50015000, status, 0) \
	fn(DT_N_S_soc_S_mspi_50015000, status, 1) \
	fn(DT_N_S_soc_S_mspi_50015000, status, 2) \
	fn(DT_N_S_soc_S_mspi_50015000, status, 3)
#define DT_N_S_soc_S_mspi_50015000_P_status_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_P_compatible {"ambiq,apollo3p-mspi"}
#define DT_N_S_soc_S_mspi_50015000_P_compatible_IDX_0 "ambiq,apollo3p-mspi"
#define DT_N_S_soc_S_mspi_50015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50015000, compatible, 0)
#define DT_N_S_soc_S_mspi_50015000_P_compatible_LEN 1
#define DT_N_S_soc_S_mspi_50015000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/mspi@50016000
 *
 * Node identifier: DT_N_S_soc_S_mspi_50016000
 *
 * Binding (compatible = ambiq,apollo3p-mspi):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/spi/ambiq,apollo3p-mspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mspi_50016000_PATH "/soc/mspi@50016000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mspi_50016000_FULL_NAME "mspi@50016000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mspi_50016000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_mspi_50016000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mspi_50016000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mspi_50016000_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mspi_50016000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mspi_50016000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mspi_50016000_EXISTS 1
#define DT_N_INST_2_ambiq_apollo3p_mspi DT_N_S_soc_S_mspi_50016000
#define DT_N_NODELABEL_mspi2            DT_N_S_soc_S_mspi_50016000

/* Special property macros: */
#define DT_N_S_soc_S_mspi_50016000_REG_NUM 1
#define DT_N_S_soc_S_mspi_50016000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_REG_IDX_0_VAL_ADDRESS 1342267392 /* 0x50016000 */
#define DT_N_S_soc_S_mspi_50016000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mspi_50016000_IRQ_NUM 1
#define DT_N_S_soc_S_mspi_50016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_mspi_50016000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mspi_50016000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_COMPAT_MATCHES_ambiq_apollo3p_mspi 1
#define DT_N_S_soc_S_mspi_50016000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_mspi_50016000_P_reg {1342267392 /* 0x50016000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mspi_50016000_P_reg_IDX_0 1342267392
#define DT_N_S_soc_S_mspi_50016000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mspi_50016000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50016000, reg, 0) \
	fn(DT_N_S_soc_S_mspi_50016000, reg, 1)
#define DT_N_S_soc_S_mspi_50016000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_P_interrupts {33 /* 0x21 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mspi_50016000_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_mspi_50016000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mspi_50016000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50016000, interrupts, 0) \
	fn(DT_N_S_soc_S_mspi_50016000, interrupts, 1)
#define DT_N_S_soc_S_mspi_50016000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_P_label "MSPI_2"
#define DT_N_S_soc_S_mspi_50016000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50016000, label, 0) \
	fn(DT_N_S_soc_S_mspi_50016000, label, 1) \
	fn(DT_N_S_soc_S_mspi_50016000, label, 2) \
	fn(DT_N_S_soc_S_mspi_50016000, label, 3) \
	fn(DT_N_S_soc_S_mspi_50016000, label, 4) \
	fn(DT_N_S_soc_S_mspi_50016000, label, 5)
#define DT_N_S_soc_S_mspi_50016000_P_label_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_P_status "disabled"
#define DT_N_S_soc_S_mspi_50016000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_mspi_50016000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_mspi_50016000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mspi_50016000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50016000, status, 0) \
	fn(DT_N_S_soc_S_mspi_50016000, status, 1) \
	fn(DT_N_S_soc_S_mspi_50016000, status, 2) \
	fn(DT_N_S_soc_S_mspi_50016000, status, 3) \
	fn(DT_N_S_soc_S_mspi_50016000, status, 4) \
	fn(DT_N_S_soc_S_mspi_50016000, status, 5) \
	fn(DT_N_S_soc_S_mspi_50016000, status, 6) \
	fn(DT_N_S_soc_S_mspi_50016000, status, 7)
#define DT_N_S_soc_S_mspi_50016000_P_status_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_P_compatible {"ambiq,apollo3p-mspi"}
#define DT_N_S_soc_S_mspi_50016000_P_compatible_IDX_0 "ambiq,apollo3p-mspi"
#define DT_N_S_soc_S_mspi_50016000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mspi_50016000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mspi_50016000, compatible, 0)
#define DT_N_S_soc_S_mspi_50016000_P_compatible_LEN 1
#define DT_N_S_soc_S_mspi_50016000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40004200
 *
 * Node identifier: DT_N_S_soc_S_rtc_40004200
 *
 * Binding (compatible = ambiq,apollo3p-rtc):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/rtc/ambiq,apollo3p-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40004200_PATH "/soc/rtc@40004200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40004200_FULL_NAME "rtc@40004200"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40004200_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rtc_40004200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40004200_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40004200_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40004200_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40004200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40004200_EXISTS 1
#define DT_N_INST_0_ambiq_apollo3p_rtc DT_N_S_soc_S_rtc_40004200
#define DT_N_NODELABEL_rtc             DT_N_S_soc_S_rtc_40004200

/* Special property macros: */
#define DT_N_S_soc_S_rtc_40004200_REG_NUM 1
#define DT_N_S_soc_S_rtc_40004200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_REG_IDX_0_VAL_ADDRESS 1073758720 /* 0x40004200 */
#define DT_N_S_soc_S_rtc_40004200_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_40004200_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40004200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_rtc_40004200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40004200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_COMPAT_MATCHES_ambiq_apollo3p_rtc 1
#define DT_N_S_soc_S_rtc_40004200_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40004200_P_reg {1073758720 /* 0x40004200 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_40004200_P_reg_IDX_0 1073758720
#define DT_N_S_soc_S_rtc_40004200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_40004200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40004200, reg, 0) \
	fn(DT_N_S_soc_S_rtc_40004200, reg, 1)
#define DT_N_S_soc_S_rtc_40004200_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_P_label "RTC_0"
#define DT_N_S_soc_S_rtc_40004200_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40004200, label, 0) \
	fn(DT_N_S_soc_S_rtc_40004200, label, 1) \
	fn(DT_N_S_soc_S_rtc_40004200, label, 2) \
	fn(DT_N_S_soc_S_rtc_40004200, label, 3) \
	fn(DT_N_S_soc_S_rtc_40004200, label, 4)
#define DT_N_S_soc_S_rtc_40004200_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_P_interrupts {2 /* 0x2 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40004200_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_rtc_40004200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40004200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40004200, interrupts, 0) \
	fn(DT_N_S_soc_S_rtc_40004200, interrupts, 1)
#define DT_N_S_soc_S_rtc_40004200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_P_status "okay"
#define DT_N_S_soc_S_rtc_40004200_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40004200_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_40004200_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40004200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40004200, status, 0) \
	fn(DT_N_S_soc_S_rtc_40004200, status, 1) \
	fn(DT_N_S_soc_S_rtc_40004200, status, 2) \
	fn(DT_N_S_soc_S_rtc_40004200, status, 3)
#define DT_N_S_soc_S_rtc_40004200_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_P_compatible {"ambiq,apollo3p-rtc"}
#define DT_N_S_soc_S_rtc_40004200_P_compatible_IDX_0 "ambiq,apollo3p-rtc"
#define DT_N_S_soc_S_rtc_40004200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40004200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40004200, compatible, 0)
#define DT_N_S_soc_S_rtc_40004200_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40004200_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/serial@4000c400
 *
 * Node identifier: DT_N_S_soc_S_serial_4000c400
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_4000c400_PATH "/soc/serial@4000c400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_4000c400_FULL_NAME "serial@4000c400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_4000c400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_4000c400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_4000c400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_4000c400_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_4000c400_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_4000c400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_4000c400_EXISTS 1
#define DT_N_INST_1_ambiq_apllo3p_usart DT_N_S_soc_S_serial_4000c400
#define DT_N_NODELABEL_uart1            DT_N_S_soc_S_serial_4000c400

/* Special property macros: */
#define DT_N_S_soc_S_serial_4000c400_REG_NUM 1
#define DT_N_S_soc_S_serial_4000c400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_REG_IDX_0_VAL_ADDRESS 1073792000 /* 0x4000c400 */
#define DT_N_S_soc_S_serial_4000c400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_4000c400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_4000c400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_serial_4000c400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_4000c400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_COMPAT_MATCHES_ambiq_apllo3p_usart 1
#define DT_N_S_soc_S_serial_4000c400_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_4000c400_P_compatible {"ambiq,apllo3p-usart"}
#define DT_N_S_soc_S_serial_4000c400_P_compatible_IDX_0 "ambiq,apllo3p-usart"
#define DT_N_S_soc_S_serial_4000c400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000c400, compatible, 0)
#define DT_N_S_soc_S_serial_4000c400_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_4000c400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_P_reg {1073792000 /* 0x4000c400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_4000c400_P_reg_IDX_0 1073792000
#define DT_N_S_soc_S_serial_4000c400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_4000c400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000c400, reg, 0) \
	fn(DT_N_S_soc_S_serial_4000c400, reg, 1)
#define DT_N_S_soc_S_serial_4000c400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_P_interrupts {16 /* 0x10 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_4000c400_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_serial_4000c400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_4000c400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000c400, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_4000c400, interrupts, 1)
#define DT_N_S_soc_S_serial_4000c400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_P_status "okay"
#define DT_N_S_soc_S_serial_4000c400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_4000c400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_4000c400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_4000c400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000c400, status, 0) \
	fn(DT_N_S_soc_S_serial_4000c400, status, 1) \
	fn(DT_N_S_soc_S_serial_4000c400, status, 2) \
	fn(DT_N_S_soc_S_serial_4000c400, status, 3)
#define DT_N_S_soc_S_serial_4000c400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_4000c400_P_label "UART_1"
#define DT_N_S_soc_S_serial_4000c400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4000c400, label, 0) \
	fn(DT_N_S_soc_S_serial_4000c400, label, 1) \
	fn(DT_N_S_soc_S_serial_4000c400, label, 2) \
	fn(DT_N_S_soc_S_serial_4000c400, label, 3) \
	fn(DT_N_S_soc_S_serial_4000c400, label, 4) \
	fn(DT_N_S_soc_S_serial_4000c400, label, 5)
#define DT_N_S_soc_S_serial_4000c400_P_label_EXISTS 1

/*
 * Devicetree node: /soc/serial@4001c000
 *
 * Node identifier: DT_N_S_soc_S_serial_4001c000
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_4001c000_PATH "/soc/serial@4001c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_4001c000_FULL_NAME "serial@4001c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_4001c000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_4001c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_4001c000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_4001c000_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_4001c000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_4001c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_4001c000_EXISTS 1
#define DT_N_INST_0_ambiq_apllo3p_usart DT_N_S_soc_S_serial_4001c000
#define DT_N_NODELABEL_uart0            DT_N_S_soc_S_serial_4001c000

/* Special property macros: */
#define DT_N_S_soc_S_serial_4001c000_REG_NUM 1
#define DT_N_S_soc_S_serial_4001c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_REG_IDX_0_VAL_ADDRESS 1073856512 /* 0x4001c000 */
#define DT_N_S_soc_S_serial_4001c000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_4001c000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_serial_4001c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_4001c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_COMPAT_MATCHES_ambiq_apllo3p_usart 1
#define DT_N_S_soc_S_serial_4001c000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_4001c000_P_compatible {"ambiq,apllo3p-usart"}
#define DT_N_S_soc_S_serial_4001c000_P_compatible_IDX_0 "ambiq,apllo3p-usart"
#define DT_N_S_soc_S_serial_4001c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4001c000, compatible, 0)
#define DT_N_S_soc_S_serial_4001c000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_4001c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_P_reg {1073856512 /* 0x4001c000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_4001c000_P_reg_IDX_0 1073856512
#define DT_N_S_soc_S_serial_4001c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_4001c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4001c000, reg, 0) \
	fn(DT_N_S_soc_S_serial_4001c000, reg, 1)
#define DT_N_S_soc_S_serial_4001c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_P_interrupts {15 /* 0xf */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_4001c000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_serial_4001c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_4001c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4001c000, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_4001c000, interrupts, 1)
#define DT_N_S_soc_S_serial_4001c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_P_status "okay"
#define DT_N_S_soc_S_serial_4001c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_4001c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_4001c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_4001c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4001c000, status, 0) \
	fn(DT_N_S_soc_S_serial_4001c000, status, 1) \
	fn(DT_N_S_soc_S_serial_4001c000, status, 2) \
	fn(DT_N_S_soc_S_serial_4001c000, status, 3)
#define DT_N_S_soc_S_serial_4001c000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_4001c000_P_label "UART_0"
#define DT_N_S_soc_S_serial_4001c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_4001c000, label, 0) \
	fn(DT_N_S_soc_S_serial_4001c000, label, 1) \
	fn(DT_N_S_soc_S_serial_4001c000, label, 2) \
	fn(DT_N_S_soc_S_serial_4001c000, label, 3) \
	fn(DT_N_S_soc_S_serial_4001c000, label, 4) \
	fn(DT_N_S_soc_S_serial_4001c000, label, 5)
#define DT_N_S_soc_S_serial_4001c000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/spi@50005000
 *
 * Node identifier: DT_N_S_soc_S_spi_50005000
 *
 * Binding (compatible = ambiq,apollo3p-spi):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/spi/ambiq,apollo3p-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_50005000_PATH "/soc/spi@50005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_50005000_FULL_NAME "spi@50005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_50005000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_50005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_50005000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_50005000_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_50005000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_50005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_50005000_EXISTS 1
#define DT_N_INST_1_ambiq_apollo3p_spi DT_N_S_soc_S_spi_50005000
#define DT_N_NODELABEL_spi1            DT_N_S_soc_S_spi_50005000

/* Special property macros: */
#define DT_N_S_soc_S_spi_50005000_REG_NUM 1
#define DT_N_S_soc_S_spi_50005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_REG_IDX_0_VAL_ADDRESS 1342197760 /* 0x50005000 */
#define DT_N_S_soc_S_spi_50005000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_50005000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_50005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_IRQ_IDX_0_VAL_irq 7
#define DT_N_S_soc_S_spi_50005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_50005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_COMPAT_MATCHES_ambiq_apollo3p_spi 1
#define DT_N_S_soc_S_spi_50005000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_50005000_P_reg {1342197760 /* 0x50005000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_50005000_P_reg_IDX_0 1342197760
#define DT_N_S_soc_S_spi_50005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_50005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50005000, reg, 0) \
	fn(DT_N_S_soc_S_spi_50005000, reg, 1)
#define DT_N_S_soc_S_spi_50005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_P_interrupts {7 /* 0x7 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_50005000_P_interrupts_IDX_0 7
#define DT_N_S_soc_S_spi_50005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_50005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50005000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_50005000, interrupts, 1)
#define DT_N_S_soc_S_spi_50005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_P_label "SPI_1"
#define DT_N_S_soc_S_spi_50005000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50005000, label, 0) \
	fn(DT_N_S_soc_S_spi_50005000, label, 1) \
	fn(DT_N_S_soc_S_spi_50005000, label, 2) \
	fn(DT_N_S_soc_S_spi_50005000, label, 3) \
	fn(DT_N_S_soc_S_spi_50005000, label, 4)
#define DT_N_S_soc_S_spi_50005000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_P_status "disabled"
#define DT_N_S_soc_S_spi_50005000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_50005000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_50005000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_50005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50005000, status, 0) \
	fn(DT_N_S_soc_S_spi_50005000, status, 1) \
	fn(DT_N_S_soc_S_spi_50005000, status, 2) \
	fn(DT_N_S_soc_S_spi_50005000, status, 3) \
	fn(DT_N_S_soc_S_spi_50005000, status, 4) \
	fn(DT_N_S_soc_S_spi_50005000, status, 5) \
	fn(DT_N_S_soc_S_spi_50005000, status, 6) \
	fn(DT_N_S_soc_S_spi_50005000, status, 7)
#define DT_N_S_soc_S_spi_50005000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_P_compatible {"ambiq,apollo3p-spi"}
#define DT_N_S_soc_S_spi_50005000_P_compatible_IDX_0 "ambiq,apollo3p-spi"
#define DT_N_S_soc_S_spi_50005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50005000, compatible, 0)
#define DT_N_S_soc_S_spi_50005000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_50005000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/spi@50006000
 *
 * Node identifier: DT_N_S_soc_S_spi_50006000
 *
 * Binding (compatible = ambiq,apollo3p-spi):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/spi/ambiq,apollo3p-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_50006000_PATH "/soc/spi@50006000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_50006000_FULL_NAME "spi@50006000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_50006000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_50006000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_50006000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_50006000_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_50006000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_50006000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_50006000_EXISTS 1
#define DT_N_INST_2_ambiq_apollo3p_spi DT_N_S_soc_S_spi_50006000
#define DT_N_NODELABEL_spi2            DT_N_S_soc_S_spi_50006000

/* Special property macros: */
#define DT_N_S_soc_S_spi_50006000_REG_NUM 1
#define DT_N_S_soc_S_spi_50006000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_REG_IDX_0_VAL_ADDRESS 1342201856 /* 0x50006000 */
#define DT_N_S_soc_S_spi_50006000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_50006000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_50006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_spi_50006000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_50006000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_COMPAT_MATCHES_ambiq_apollo3p_spi 1
#define DT_N_S_soc_S_spi_50006000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_50006000_P_reg {1342201856 /* 0x50006000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_50006000_P_reg_IDX_0 1342201856
#define DT_N_S_soc_S_spi_50006000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_50006000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50006000, reg, 0) \
	fn(DT_N_S_soc_S_spi_50006000, reg, 1)
#define DT_N_S_soc_S_spi_50006000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_P_interrupts {8 /* 0x8 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_50006000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_spi_50006000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_50006000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50006000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_50006000, interrupts, 1)
#define DT_N_S_soc_S_spi_50006000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_P_label "SPI_2"
#define DT_N_S_soc_S_spi_50006000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50006000, label, 0) \
	fn(DT_N_S_soc_S_spi_50006000, label, 1) \
	fn(DT_N_S_soc_S_spi_50006000, label, 2) \
	fn(DT_N_S_soc_S_spi_50006000, label, 3) \
	fn(DT_N_S_soc_S_spi_50006000, label, 4)
#define DT_N_S_soc_S_spi_50006000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_P_status "disabled"
#define DT_N_S_soc_S_spi_50006000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_50006000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_50006000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_50006000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50006000, status, 0) \
	fn(DT_N_S_soc_S_spi_50006000, status, 1) \
	fn(DT_N_S_soc_S_spi_50006000, status, 2) \
	fn(DT_N_S_soc_S_spi_50006000, status, 3) \
	fn(DT_N_S_soc_S_spi_50006000, status, 4) \
	fn(DT_N_S_soc_S_spi_50006000, status, 5) \
	fn(DT_N_S_soc_S_spi_50006000, status, 6) \
	fn(DT_N_S_soc_S_spi_50006000, status, 7)
#define DT_N_S_soc_S_spi_50006000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_P_compatible {"ambiq,apollo3p-spi"}
#define DT_N_S_soc_S_spi_50006000_P_compatible_IDX_0 "ambiq,apollo3p-spi"
#define DT_N_S_soc_S_spi_50006000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50006000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50006000, compatible, 0)
#define DT_N_S_soc_S_spi_50006000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_50006000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/spi@50007000
 *
 * Node identifier: DT_N_S_soc_S_spi_50007000
 *
 * Binding (compatible = ambiq,apollo3p-spi):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/spi/ambiq,apollo3p-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_50007000_PATH "/soc/spi@50007000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_50007000_FULL_NAME "spi@50007000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_50007000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_50007000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_50007000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_50007000_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_50007000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_50007000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_50007000_EXISTS 1
#define DT_N_INST_3_ambiq_apollo3p_spi DT_N_S_soc_S_spi_50007000
#define DT_N_NODELABEL_spi3            DT_N_S_soc_S_spi_50007000

/* Special property macros: */
#define DT_N_S_soc_S_spi_50007000_REG_NUM 1
#define DT_N_S_soc_S_spi_50007000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_REG_IDX_0_VAL_ADDRESS 1342205952 /* 0x50007000 */
#define DT_N_S_soc_S_spi_50007000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_50007000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_50007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_spi_50007000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_50007000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_COMPAT_MATCHES_ambiq_apollo3p_spi 1
#define DT_N_S_soc_S_spi_50007000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_50007000_P_reg {1342205952 /* 0x50007000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_50007000_P_reg_IDX_0 1342205952
#define DT_N_S_soc_S_spi_50007000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_50007000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50007000, reg, 0) \
	fn(DT_N_S_soc_S_spi_50007000, reg, 1)
#define DT_N_S_soc_S_spi_50007000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_P_interrupts {9 /* 0x9 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_50007000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_spi_50007000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_50007000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50007000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_50007000, interrupts, 1)
#define DT_N_S_soc_S_spi_50007000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_P_label "SPI_3"
#define DT_N_S_soc_S_spi_50007000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50007000, label, 0) \
	fn(DT_N_S_soc_S_spi_50007000, label, 1) \
	fn(DT_N_S_soc_S_spi_50007000, label, 2) \
	fn(DT_N_S_soc_S_spi_50007000, label, 3) \
	fn(DT_N_S_soc_S_spi_50007000, label, 4)
#define DT_N_S_soc_S_spi_50007000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_P_status "disabled"
#define DT_N_S_soc_S_spi_50007000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_50007000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_50007000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_50007000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50007000, status, 0) \
	fn(DT_N_S_soc_S_spi_50007000, status, 1) \
	fn(DT_N_S_soc_S_spi_50007000, status, 2) \
	fn(DT_N_S_soc_S_spi_50007000, status, 3) \
	fn(DT_N_S_soc_S_spi_50007000, status, 4) \
	fn(DT_N_S_soc_S_spi_50007000, status, 5) \
	fn(DT_N_S_soc_S_spi_50007000, status, 6) \
	fn(DT_N_S_soc_S_spi_50007000, status, 7)
#define DT_N_S_soc_S_spi_50007000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_P_compatible {"ambiq,apollo3p-spi"}
#define DT_N_S_soc_S_spi_50007000_P_compatible_IDX_0 "ambiq,apollo3p-spi"
#define DT_N_S_soc_S_spi_50007000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50007000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50007000, compatible, 0)
#define DT_N_S_soc_S_spi_50007000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_50007000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/spi@50008000
 *
 * Node identifier: DT_N_S_soc_S_spi_50008000
 *
 * Binding (compatible = ambiq,apollo3p-spi):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/spi/ambiq,apollo3p-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_50008000_PATH "/soc/spi@50008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_50008000_FULL_NAME "spi@50008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_50008000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_50008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_50008000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_50008000_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_50008000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_50008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_50008000_EXISTS 1
#define DT_N_INST_4_ambiq_apollo3p_spi DT_N_S_soc_S_spi_50008000
#define DT_N_NODELABEL_spi4            DT_N_S_soc_S_spi_50008000

/* Special property macros: */
#define DT_N_S_soc_S_spi_50008000_REG_NUM 1
#define DT_N_S_soc_S_spi_50008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_REG_IDX_0_VAL_ADDRESS 1342210048 /* 0x50008000 */
#define DT_N_S_soc_S_spi_50008000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_50008000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_50008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_spi_50008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_50008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_COMPAT_MATCHES_ambiq_apollo3p_spi 1
#define DT_N_S_soc_S_spi_50008000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_50008000_P_reg {1342210048 /* 0x50008000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_50008000_P_reg_IDX_0 1342210048
#define DT_N_S_soc_S_spi_50008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_50008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50008000, reg, 0) \
	fn(DT_N_S_soc_S_spi_50008000, reg, 1)
#define DT_N_S_soc_S_spi_50008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_P_interrupts {10 /* 0xa */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_50008000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_spi_50008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_50008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50008000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_50008000, interrupts, 1)
#define DT_N_S_soc_S_spi_50008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_P_label "SPI_4"
#define DT_N_S_soc_S_spi_50008000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50008000, label, 0) \
	fn(DT_N_S_soc_S_spi_50008000, label, 1) \
	fn(DT_N_S_soc_S_spi_50008000, label, 2) \
	fn(DT_N_S_soc_S_spi_50008000, label, 3) \
	fn(DT_N_S_soc_S_spi_50008000, label, 4)
#define DT_N_S_soc_S_spi_50008000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_P_status "disabled"
#define DT_N_S_soc_S_spi_50008000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_50008000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_50008000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_50008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50008000, status, 0) \
	fn(DT_N_S_soc_S_spi_50008000, status, 1) \
	fn(DT_N_S_soc_S_spi_50008000, status, 2) \
	fn(DT_N_S_soc_S_spi_50008000, status, 3) \
	fn(DT_N_S_soc_S_spi_50008000, status, 4) \
	fn(DT_N_S_soc_S_spi_50008000, status, 5) \
	fn(DT_N_S_soc_S_spi_50008000, status, 6) \
	fn(DT_N_S_soc_S_spi_50008000, status, 7)
#define DT_N_S_soc_S_spi_50008000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_P_compatible {"ambiq,apollo3p-spi"}
#define DT_N_S_soc_S_spi_50008000_P_compatible_IDX_0 "ambiq,apollo3p-spi"
#define DT_N_S_soc_S_spi_50008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50008000, compatible, 0)
#define DT_N_S_soc_S_spi_50008000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_50008000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/spi@50009000
 *
 * Node identifier: DT_N_S_soc_S_spi_50009000
 *
 * Binding (compatible = ambiq,apollo3p-spi):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/spi/ambiq,apollo3p-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_50009000_PATH "/soc/spi@50009000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_50009000_FULL_NAME "spi@50009000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_50009000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_50009000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_50009000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_50009000_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_50009000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_50009000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_50009000_EXISTS 1
#define DT_N_INST_5_ambiq_apollo3p_spi DT_N_S_soc_S_spi_50009000
#define DT_N_NODELABEL_spi5            DT_N_S_soc_S_spi_50009000

/* Special property macros: */
#define DT_N_S_soc_S_spi_50009000_REG_NUM 1
#define DT_N_S_soc_S_spi_50009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_REG_IDX_0_VAL_ADDRESS 1342214144 /* 0x50009000 */
#define DT_N_S_soc_S_spi_50009000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_50009000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_50009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_spi_50009000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_50009000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_COMPAT_MATCHES_ambiq_apollo3p_spi 1
#define DT_N_S_soc_S_spi_50009000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_50009000_P_reg {1342214144 /* 0x50009000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_50009000_P_reg_IDX_0 1342214144
#define DT_N_S_soc_S_spi_50009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_50009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50009000, reg, 0) \
	fn(DT_N_S_soc_S_spi_50009000, reg, 1)
#define DT_N_S_soc_S_spi_50009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_50009000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_spi_50009000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_50009000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50009000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_50009000, interrupts, 1)
#define DT_N_S_soc_S_spi_50009000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_P_label "SPI_5"
#define DT_N_S_soc_S_spi_50009000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50009000, label, 0) \
	fn(DT_N_S_soc_S_spi_50009000, label, 1) \
	fn(DT_N_S_soc_S_spi_50009000, label, 2) \
	fn(DT_N_S_soc_S_spi_50009000, label, 3) \
	fn(DT_N_S_soc_S_spi_50009000, label, 4)
#define DT_N_S_soc_S_spi_50009000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_P_status "disabled"
#define DT_N_S_soc_S_spi_50009000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_50009000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_50009000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_50009000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50009000, status, 0) \
	fn(DT_N_S_soc_S_spi_50009000, status, 1) \
	fn(DT_N_S_soc_S_spi_50009000, status, 2) \
	fn(DT_N_S_soc_S_spi_50009000, status, 3) \
	fn(DT_N_S_soc_S_spi_50009000, status, 4) \
	fn(DT_N_S_soc_S_spi_50009000, status, 5) \
	fn(DT_N_S_soc_S_spi_50009000, status, 6) \
	fn(DT_N_S_soc_S_spi_50009000, status, 7)
#define DT_N_S_soc_S_spi_50009000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_P_compatible {"ambiq,apollo3p-spi"}
#define DT_N_S_soc_S_spi_50009000_P_compatible_IDX_0 "ambiq,apollo3p-spi"
#define DT_N_S_soc_S_spi_50009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50009000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50009000, compatible, 0)
#define DT_N_S_soc_S_spi_50009000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_50009000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Special property macros: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40018000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40018000
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40018000_PATH "/soc/flash-controller@40018000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40018000_FULL_NAME "flash-controller@40018000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40018000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_flash_controller_40018000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000)
#define DT_N_S_soc_S_flash_controller_40018000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40018000_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40018000_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40018000_SUPPORTS_ORDS \
	53, /* /soc/flash-controller@40018000/flash@00000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40018000_EXISTS 1
#define DT_N_INST_0_ambiq_apollo3p_flash_controller DT_N_S_soc_S_flash_controller_40018000
#define DT_N_NODELABEL_flash                        DT_N_S_soc_S_flash_controller_40018000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40018000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40018000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_REG_IDX_0_VAL_ADDRESS 1073840128 /* 0x40018000 */
#define DT_N_S_soc_S_flash_controller_40018000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_40018000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40018000_COMPAT_MATCHES_ambiq_apollo3p_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40018000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40018000_P_compatible {"ambiq,apollo3p-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40018000_P_compatible_IDX_0 "ambiq,apollo3p-flash-controller"
#define DT_N_S_soc_S_flash_controller_40018000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40018000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40018000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_P_label "FLASH_CTRL"
#define DT_N_S_soc_S_flash_controller_40018000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40018000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40018000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40018000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40018000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40018000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40018000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_40018000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_40018000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_40018000, label, 9)
#define DT_N_S_soc_S_flash_controller_40018000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_P_reg {1073840128 /* 0x40018000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_40018000_P_reg_IDX_0 1073840128
#define DT_N_S_soc_S_flash_controller_40018000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_40018000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40018000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40018000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40018000/flash@00000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000
 *
 * Binding (compatible = soc-nv-flash):
 *   /home/wt/zephyr-kit/zephyr_pkg/zephyr/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_PATH "/soc/flash-controller@40018000/flash@00000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_FULL_NAME "flash@00000000"

/* Node parent (/soc/flash-controller@40018000) identifier: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_PARENT DT_N_S_soc_S_flash_controller_40018000
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_REQUIRES_ORDS \
	52, /* /soc/flash-controller@40018000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_SUPPORTS_ORDS \
	54, /* /soc/flash-controller@40018000/flash@00000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_label "FLASH_APOLLO3P"
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 9) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 10) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 11) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 12) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, label, 13)
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_reg {0 /* 0x0 */, 2097152 /* 0x200000 */}
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_reg_IDX_1 2097152
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40018000/flash@00000000/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   /home/wt/zephyr-kit/zephyr_pkg/zephyr/dts/bindings/mtd/partition.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_PATH "/soc/flash-controller@40018000/flash@00000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@40018000/flash@00000000) identifier: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000)
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_REQUIRES_ORDS \
	53, /* /soc/flash-controller@40018000/flash@00000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_SUPPORTS_ORDS \
	55, /* /soc/flash-controller@40018000/flash@00000000/partitions/partition@0 */ \
	56, /* /soc/flash-controller@40018000/flash@00000000/partitions/partition@c000 */ \
	57, /* /soc/flash-controller@40018000/flash@00000000/partitions/partition@3c000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@40018000/flash@00000000/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_PATH "/soc/flash-controller@40018000/flash@00000000/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@40018000/flash@00000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_REQUIRES_ORDS \
	54, /* /soc/flash-controller@40018000/flash@00000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_otp_partition DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_STATUS_okay 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_PARTITION_ID 9

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_label "otp"
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0, label, 2)
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 49152 /* 0xc000 */}
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_reg_IDX_1 49152
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40018000/flash@00000000/partitions/partition@c000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_PATH "/soc/flash-controller@40018000/flash@00000000/partitions/partition@c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_FULL_NAME "partition@c000"

/* Node parent (/soc/flash-controller@40018000/flash@00000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_PARENT DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_REQUIRES_ORDS \
	54, /* /soc/flash-controller@40018000/flash@00000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_REG_IDX_0_VAL_ADDRESS 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_REG_IDX_0_VAL_SIZE 196608 /* 0x30000 */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_STATUS_okay 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_PARTITION_ID 10

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000, label, 6)
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_reg {49152 /* 0xc000 */, 196608 /* 0x30000 */}
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_reg_IDX_0 49152
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_reg_IDX_1 196608
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40018000/flash@00000000/partitions/partition@3c000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_PATH "/soc/flash-controller@40018000/flash@00000000/partitions/partition@3c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_FULL_NAME "partition@3c000"

/* Node parent (/soc/flash-controller@40018000/flash@00000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_PARENT DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_REQUIRES_ORDS \
	54, /* /soc/flash-controller@40018000/flash@00000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_REG_IDX_0_VAL_ADDRESS 245760 /* 0x3c000 */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_REG_IDX_0_VAL_SIZE 1851392 /* 0x1c4000 */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_STATUS_okay 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_PARTITION_ID 11

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000, label, 6)
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_reg {245760 /* 0x3c000 */, 1851392 /* 0x1c4000 */}
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_reg_IDX_0 245760
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_reg_IDX_1 1851392
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/i2c@50005000
 *
 * Node identifier: DT_N_S_soc_S_i2c_50005000
 *
 * Binding (compatible = ambiq,apollo3p-i2c):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/i2c/ambiq,apollo3p-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_50005000_PATH "/soc/i2c@50005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_50005000_FULL_NAME "i2c@50005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_50005000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_50005000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30)
#define DT_N_S_soc_S_i2c_50005000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_50005000_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_50005000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_50005000_SUPPORTS_ORDS \
	59, /* /soc/i2c@50005000/mmc5603@30 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_50005000_EXISTS 1
#define DT_N_INST_0_ambiq_apollo3p_i2c DT_N_S_soc_S_i2c_50005000
#define DT_N_NODELABEL_i2c1            DT_N_S_soc_S_i2c_50005000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_50005000_REG_NUM 1
#define DT_N_S_soc_S_i2c_50005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_REG_IDX_0_VAL_ADDRESS 1342197760 /* 0x50005000 */
#define DT_N_S_soc_S_i2c_50005000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_50005000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_50005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_IRQ_IDX_0_VAL_irq 7
#define DT_N_S_soc_S_i2c_50005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_50005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_COMPAT_MATCHES_ambiq_apollo3p_i2c 1
#define DT_N_S_soc_S_i2c_50005000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_50005000_P_reg {1342197760 /* 0x50005000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_50005000_P_reg_IDX_0 1342197760
#define DT_N_S_soc_S_i2c_50005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_50005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50005000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_50005000, reg, 1)
#define DT_N_S_soc_S_i2c_50005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_P_interrupts {7 /* 0x7 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_50005000_P_interrupts_IDX_0 7
#define DT_N_S_soc_S_i2c_50005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_50005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50005000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_50005000, interrupts, 1)
#define DT_N_S_soc_S_i2c_50005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_50005000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_P_label "I2C_1"
#define DT_N_S_soc_S_i2c_50005000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50005000, label, 0) \
	fn(DT_N_S_soc_S_i2c_50005000, label, 1) \
	fn(DT_N_S_soc_S_i2c_50005000, label, 2) \
	fn(DT_N_S_soc_S_i2c_50005000, label, 3) \
	fn(DT_N_S_soc_S_i2c_50005000, label, 4)
#define DT_N_S_soc_S_i2c_50005000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_P_status "okay"
#define DT_N_S_soc_S_i2c_50005000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_50005000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_50005000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_50005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50005000, status, 0) \
	fn(DT_N_S_soc_S_i2c_50005000, status, 1) \
	fn(DT_N_S_soc_S_i2c_50005000, status, 2) \
	fn(DT_N_S_soc_S_i2c_50005000, status, 3)
#define DT_N_S_soc_S_i2c_50005000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_P_compatible {"ambiq,apollo3p-i2c"}
#define DT_N_S_soc_S_i2c_50005000_P_compatible_IDX_0 "ambiq,apollo3p-i2c"
#define DT_N_S_soc_S_i2c_50005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50005000, compatible, 0)
#define DT_N_S_soc_S_i2c_50005000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_50005000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@50005000/mmc5603@30
 *
 * Node identifier: DT_N_S_soc_S_i2c_50005000_S_mmc5603_30
 *
 * Binding (compatible = memsic,mmc5603):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/sensor/memsic,mmc5603.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_PATH "/soc/i2c@50005000/mmc5603@30"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_FULL_NAME "mmc5603@30"

/* Node parent (/soc/i2c@50005000) identifier: */
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_PARENT DT_N_S_soc_S_i2c_50005000
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_REQUIRES_ORDS \
	17, /* /soc/pin-controller@40010000/gpio@40010000 */ \
	58, /* /soc/i2c@50005000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_EXISTS 1
#define DT_N_INST_0_memsic_mmc5603 DT_N_S_soc_S_i2c_50005000_S_mmc5603_30

/* Bus info (controller: '/soc/i2c@50005000', type: 'i2c') */
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_BUS_i2c 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_BUS DT_N_S_soc_S_i2c_50005000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_REG_NUM 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_REG_IDX_0_VAL_ADDRESS 48 /* 0x30 */
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_COMPAT_MATCHES_memsic_mmc5603 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_pwr_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_pwr_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_pwr_gpios_IDX_0_VAL_pin 13
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_pwr_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_pwr_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_pwr_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_pwr_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30, pwr_gpios, 0)
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_pwr_gpios_LEN 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_pwr_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_reg {48 /* 0x30 */}
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_reg_IDX_0 48
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30, reg, 0)
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_label "MMC5603"
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30, label, 0) \
	fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30, label, 1) \
	fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30, label, 2) \
	fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30, label, 3) \
	fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30, label, 4) \
	fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30, label, 5) \
	fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30, label, 6)
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_compatible {"memsic,mmc5603"}
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_compatible_IDX_0 "memsic,mmc5603"
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50005000_S_mmc5603_30, compatible, 0)
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_50005000_S_mmc5603_30_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@50007000
 *
 * Node identifier: DT_N_S_soc_S_i2c_50007000
 *
 * Binding (compatible = ambiq,apollo3p-i2c):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/i2c/ambiq,apollo3p-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_50007000_PATH "/soc/i2c@50007000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_50007000_FULL_NAME "i2c@50007000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_50007000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_50007000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_50007000_S_cw6305_0b)
#define DT_N_S_soc_S_i2c_50007000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_50007000_S_cw6305_0b) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_50007000_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_50007000_REQUIRES_ORDS \
	13, /* /soc */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_50007000_SUPPORTS_ORDS \
	61, /* /soc/i2c@50007000/cw6305@0B */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_50007000_EXISTS 1
#define DT_N_INST_2_ambiq_apollo3p_i2c DT_N_S_soc_S_i2c_50007000
#define DT_N_NODELABEL_i2c3            DT_N_S_soc_S_i2c_50007000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_50007000_REG_NUM 1
#define DT_N_S_soc_S_i2c_50007000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_REG_IDX_0_VAL_ADDRESS 1342205952 /* 0x50007000 */
#define DT_N_S_soc_S_i2c_50007000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_50007000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_50007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_i2c_50007000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_50007000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_COMPAT_MATCHES_ambiq_apollo3p_i2c 1
#define DT_N_S_soc_S_i2c_50007000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_50007000_P_reg {1342205952 /* 0x50007000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_50007000_P_reg_IDX_0 1342205952
#define DT_N_S_soc_S_i2c_50007000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_50007000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50007000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_50007000, reg, 1)
#define DT_N_S_soc_S_i2c_50007000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_P_interrupts {9 /* 0x9 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_50007000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_i2c_50007000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_50007000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50007000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_50007000, interrupts, 1)
#define DT_N_S_soc_S_i2c_50007000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_50007000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_P_label "I2C_3"
#define DT_N_S_soc_S_i2c_50007000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50007000, label, 0) \
	fn(DT_N_S_soc_S_i2c_50007000, label, 1) \
	fn(DT_N_S_soc_S_i2c_50007000, label, 2) \
	fn(DT_N_S_soc_S_i2c_50007000, label, 3) \
	fn(DT_N_S_soc_S_i2c_50007000, label, 4)
#define DT_N_S_soc_S_i2c_50007000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_P_status "okay"
#define DT_N_S_soc_S_i2c_50007000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_50007000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_50007000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_50007000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50007000, status, 0) \
	fn(DT_N_S_soc_S_i2c_50007000, status, 1) \
	fn(DT_N_S_soc_S_i2c_50007000, status, 2) \
	fn(DT_N_S_soc_S_i2c_50007000, status, 3)
#define DT_N_S_soc_S_i2c_50007000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_P_compatible {"ambiq,apollo3p-i2c"}
#define DT_N_S_soc_S_i2c_50007000_P_compatible_IDX_0 "ambiq,apollo3p-i2c"
#define DT_N_S_soc_S_i2c_50007000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50007000, compatible, 0)
#define DT_N_S_soc_S_i2c_50007000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_50007000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@50007000/cw6305@0B
 *
 * Node identifier: DT_N_S_soc_S_i2c_50007000_S_cw6305_0b
 *
 * Binding (compatible = cellwise,cw6305):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/sensor/cellwise,cw6305.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_PATH "/soc/i2c@50007000/cw6305@0B"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_FULL_NAME "cw6305@0B"

/* Node parent (/soc/i2c@50007000) identifier: */
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_PARENT DT_N_S_soc_S_i2c_50007000
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_REQUIRES_ORDS \
	17, /* /soc/pin-controller@40010000/gpio@40010000 */ \
	60, /* /soc/i2c@50007000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_EXISTS 1
#define DT_N_INST_0_cellwise_cw6305 DT_N_S_soc_S_i2c_50007000_S_cw6305_0b

/* Bus info (controller: '/soc/i2c@50007000', type: 'i2c') */
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_BUS_i2c 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_BUS DT_N_S_soc_S_i2c_50007000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_REG_NUM 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_REG_IDX_0_VAL_ADDRESS 11 /* 0xb */
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_COMPAT_MATCHES_cellwise_cw6305 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_int_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_int_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_int_gpios_IDX_0_VAL_pin 16
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_int_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_int_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_int_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_int_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50007000_S_cw6305_0b, int_gpios, 0)
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_int_gpios_LEN 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_int_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_reg {11 /* 0xb */}
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_reg_IDX_0 11
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50007000_S_cw6305_0b, reg, 0)
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_label "CW6305"
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50007000_S_cw6305_0b, label, 0) \
	fn(DT_N_S_soc_S_i2c_50007000_S_cw6305_0b, label, 1) \
	fn(DT_N_S_soc_S_i2c_50007000_S_cw6305_0b, label, 2) \
	fn(DT_N_S_soc_S_i2c_50007000_S_cw6305_0b, label, 3) \
	fn(DT_N_S_soc_S_i2c_50007000_S_cw6305_0b, label, 4) \
	fn(DT_N_S_soc_S_i2c_50007000_S_cw6305_0b, label, 5)
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_compatible {"cellwise,cw6305"}
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_compatible_IDX_0 "cellwise,cw6305"
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_50007000_S_cw6305_0b, compatible, 0)
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_50007000_S_cw6305_0b_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40010000/gpio@40010400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400
 *
 * Binding (compatible = ambiq,apollo3p-gpio):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/gpio/ambiq,apollo3p-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_PATH "/soc/pin-controller@40010000/gpio@40010400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_FULL_NAME "gpio@40010400"

/* Node parent (/soc/pin-controller@40010000) identifier: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_PARENT DT_N_S_soc_S_pin_controller_40010000
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_REQUIRES_ORDS \
	14, /* /soc/pin-controller@40010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_EXISTS 1
#define DT_N_INST_1_ambiq_apollo3p_gpio DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400
#define DT_N_NODELABEL_gpio1            DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_REG_IDX_0_VAL_ADDRESS 1073808384 /* 0x40010400 */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_COMPAT_MATCHES_ambiq_apollo3p_gpio 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_reg {1073808384 /* 0x40010400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_reg_IDX_0 1073808384
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, reg, 1)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_label "GPIO_1"
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, label, 4) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, label, 5)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, status, 0) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, status, 1) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, status, 2) \
	fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, status, 3)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_compatible {"ambiq,apollo3p-gpio"}
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_compatible_IDX_0 "ambiq,apollo3p-gpio"
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010400_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/spi@50004000
 *
 * Node identifier: DT_N_S_soc_S_spi_50004000
 *
 * Binding (compatible = ambiq,apollo3p-spi):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/spi/ambiq,apollo3p-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_50004000_PATH "/soc/spi@50004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_50004000_FULL_NAME "spi@50004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_50004000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_50004000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0)
#define DT_N_S_soc_S_spi_50004000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_50004000_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_50004000_REQUIRES_ORDS \
	13, /* /soc */ \
	17, /* /soc/pin-controller@40010000/gpio@40010000 */ \
	34, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_50004000_SUPPORTS_ORDS \
	64, /* /soc/spi@50004000/icm42607@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_50004000_EXISTS 1
#define DT_N_INST_0_ambiq_apollo3p_spi DT_N_S_soc_S_spi_50004000
#define DT_N_NODELABEL_spi0            DT_N_S_soc_S_spi_50004000

/* Special property macros: */
#define DT_N_S_soc_S_spi_50004000_REG_NUM 1
#define DT_N_S_soc_S_spi_50004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_REG_IDX_0_VAL_ADDRESS 1342193664 /* 0x50004000 */
#define DT_N_S_soc_S_spi_50004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_50004000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_50004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_spi_50004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_50004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_COMPAT_MATCHES_ambiq_apollo3p_spi 1
#define DT_N_S_soc_S_spi_50004000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_50004000_P_reg {1342193664 /* 0x50004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_50004000_P_reg_IDX_0 1342193664
#define DT_N_S_soc_S_spi_50004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_50004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50004000, reg, 0) \
	fn(DT_N_S_soc_S_spi_50004000, reg, 1)
#define DT_N_S_soc_S_spi_50004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_interrupts {6 /* 0x6 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_50004000_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_spi_50004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_50004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50004000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_50004000, interrupts, 1)
#define DT_N_S_soc_S_spi_50004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_label "SPI_0"
#define DT_N_S_soc_S_spi_50004000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50004000, label, 0) \
	fn(DT_N_S_soc_S_spi_50004000, label, 1) \
	fn(DT_N_S_soc_S_spi_50004000, label, 2) \
	fn(DT_N_S_soc_S_spi_50004000, label, 3) \
	fn(DT_N_S_soc_S_spi_50004000, label, 4)
#define DT_N_S_soc_S_spi_50004000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000
#define DT_N_S_soc_S_spi_50004000_P_cs_gpios_IDX_0_VAL_pin 3
#define DT_N_S_soc_S_spi_50004000_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_cs_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_50004000_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50004000, cs_gpios, 0)
#define DT_N_S_soc_S_spi_50004000_P_cs_gpios_LEN 1
#define DT_N_S_soc_S_spi_50004000_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_status "okay"
#define DT_N_S_soc_S_spi_50004000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_50004000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_50004000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_50004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50004000, status, 0) \
	fn(DT_N_S_soc_S_spi_50004000, status, 1) \
	fn(DT_N_S_soc_S_spi_50004000, status, 2) \
	fn(DT_N_S_soc_S_spi_50004000, status, 3)
#define DT_N_S_soc_S_spi_50004000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_compatible {"ambiq,apollo3p-spi"}
#define DT_N_S_soc_S_spi_50004000_P_compatible_IDX_0 "ambiq,apollo3p-spi"
#define DT_N_S_soc_S_spi_50004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50004000, compatible, 0)
#define DT_N_S_soc_S_spi_50004000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_50004000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/spi@50004000/icm42607@0
 *
 * Node identifier: DT_N_S_soc_S_spi_50004000_S_icm42607_0
 *
 * Binding (compatible = invensense,icm42607):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/sensor/invensense,icm42607.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_PATH "/soc/spi@50004000/icm42607@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_FULL_NAME "icm42607@0"

/* Node parent (/soc/spi@50004000) identifier: */
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_PARENT DT_N_S_soc_S_spi_50004000
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_REQUIRES_ORDS \
	17, /* /soc/pin-controller@40010000/gpio@40010000 */ \
	63, /* /soc/spi@50004000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_EXISTS 1
#define DT_N_INST_0_invensense_icm42607 DT_N_S_soc_S_spi_50004000_S_icm42607_0

/* Bus info (controller: '/soc/spi@50004000', type: 'spi') */
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_BUS_spi 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_BUS DT_N_S_soc_S_spi_50004000

/* Special property macros: */
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_REG_NUM 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_COMPAT_MATCHES_invensense_icm42607 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_int_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_int_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40010000_S_gpio_40010000
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_int_gpios_IDX_0_VAL_pin 17
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_int_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_int_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_int_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_int_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0, int_gpios, 0)
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_int_gpios_LEN 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_int_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_accel_hz 12
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_accel_hz_ENUM_IDX 3
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_accel_hz_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_gyro_hz 12
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_gyro_hz_ENUM_IDX 0
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_gyro_hz_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_accel_fs 16
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_accel_fs_ENUM_IDX 0
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_accel_fs_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_gyro_fs 2000
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_gyro_fs_ENUM_IDX 0
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_gyro_fs_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0, reg, 0)
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_spi_max_frequency 10000000
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_label "ICM42607"
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0, label, 0) \
	fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0, label, 1) \
	fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0, label, 2) \
	fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0, label, 3) \
	fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0, label, 4) \
	fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0, label, 5) \
	fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0, label, 6) \
	fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0, label, 7)
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_compatible {"invensense,icm42607"}
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_compatible_IDX_0 "invensense,icm42607"
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_50004000_S_icm42607_0, compatible, 0)
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_50004000_S_icm42607_0_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@0
 *
 * Node identifier: DT_N_S_soc_S_timers_0
 *
 * Binding (compatible = ambiq,apollo3p-timers):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/timer/ambiq,apollo3p-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_0_PATH "/soc/timers@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_0_FULL_NAME "timers@0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_0_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_0_S_pwm)
#define DT_N_S_soc_S_timers_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timers_0_S_pwm) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_0_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_0_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_0_SUPPORTS_ORDS \
	66, /* /soc/timers@0/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_0_EXISTS 1
#define DT_N_INST_0_ambiq_apollo3p_timers DT_N_S_soc_S_timers_0
#define DT_N_NODELABEL_ctimer0            DT_N_S_soc_S_timers_0

/* Special property macros: */
#define DT_N_S_soc_S_timers_0_REG_NUM 1
#define DT_N_S_soc_S_timers_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_timers_0_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timers_0_IRQ_NUM 0
#define DT_N_S_soc_S_timers_0_COMPAT_MATCHES_ambiq_apollo3p_timers 1
#define DT_N_S_soc_S_timers_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_0_P_label "CTIMER_0"
#define DT_N_S_soc_S_timers_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_0, label, 0) \
	fn(DT_N_S_soc_S_timers_0, label, 1) \
	fn(DT_N_S_soc_S_timers_0, label, 2) \
	fn(DT_N_S_soc_S_timers_0, label, 3) \
	fn(DT_N_S_soc_S_timers_0, label, 4) \
	fn(DT_N_S_soc_S_timers_0, label, 5) \
	fn(DT_N_S_soc_S_timers_0, label, 6) \
	fn(DT_N_S_soc_S_timers_0, label, 7)
#define DT_N_S_soc_S_timers_0_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_0_P_reg {0 /* 0x0 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timers_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_timers_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_0_P_reg_IDX_1 32
#define DT_N_S_soc_S_timers_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_0, reg, 0) \
	fn(DT_N_S_soc_S_timers_0, reg, 1)
#define DT_N_S_soc_S_timers_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_0_P_clock_source {28 /* 0x1c */}
#define DT_N_S_soc_S_timers_0_P_clock_source_IDX_0 28
#define DT_N_S_soc_S_timers_0_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_0_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_0, clock_source, 0)
#define DT_N_S_soc_S_timers_0_P_clock_source_LEN 1
#define DT_N_S_soc_S_timers_0_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_timers_0_P_status "okay"
#define DT_N_S_soc_S_timers_0_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_0_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_0_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_0, status, 0) \
	fn(DT_N_S_soc_S_timers_0, status, 1) \
	fn(DT_N_S_soc_S_timers_0, status, 2) \
	fn(DT_N_S_soc_S_timers_0, status, 3)
#define DT_N_S_soc_S_timers_0_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_0_P_compatible {"ambiq,apollo3p-timers"}
#define DT_N_S_soc_S_timers_0_P_compatible_IDX_0 "ambiq,apollo3p-timers"
#define DT_N_S_soc_S_timers_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_0, compatible, 0)
#define DT_N_S_soc_S_timers_0_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_0_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@0/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_0_S_pwm
 *
 * Binding (compatible = ambiq,apollo3p-pwm):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/pwm/ambiq,apollo3p-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_0_S_pwm_PATH "/soc/timers@0/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_0_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@0) identifier: */
#define DT_N_S_soc_S_timers_0_S_pwm_PARENT DT_N_S_soc_S_timers_0
#define DT_N_S_soc_S_timers_0_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_0_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_0_S_pwm_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_0_S_pwm_REQUIRES_ORDS \
	65, /* /soc/timers@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_0_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_0_S_pwm_EXISTS 1
#define DT_N_INST_0_ambiq_apollo3p_pwm DT_N_S_soc_S_timers_0_S_pwm
#define DT_N_NODELABEL_pwm0            DT_N_S_soc_S_timers_0_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_0_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_0_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_0_S_pwm_COMPAT_MATCHES_ambiq_apollo3p_pwm 1
#define DT_N_S_soc_S_timers_0_S_pwm_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_0_S_pwm_P_ch0_pin 25
#define DT_N_S_soc_S_timers_0_S_pwm_P_ch0_pin_EXISTS 1
#define DT_N_S_soc_S_timers_0_S_pwm_P_ch1_pin 255
#define DT_N_S_soc_S_timers_0_S_pwm_P_ch1_pin_EXISTS 1
#define DT_N_S_soc_S_timers_0_S_pwm_P_label "PWM_0"
#define DT_N_S_soc_S_timers_0_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_0_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_0_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_0_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_0_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_0_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_0_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_0_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timers_0_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_0_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_0_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_0_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_0_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_0_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_0_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_0_S_pwm, status, 3)
#define DT_N_S_soc_S_timers_0_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_0_S_pwm_P_compatible {"ambiq,apollo3p-pwm"}
#define DT_N_S_soc_S_timers_0_S_pwm_P_compatible_IDX_0 "ambiq,apollo3p-pwm"
#define DT_N_S_soc_S_timers_0_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_0_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_0_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_0_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_0_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@1
 *
 * Node identifier: DT_N_S_soc_S_timers_1
 *
 * Binding (compatible = ambiq,apollo3p-timers):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/timer/ambiq,apollo3p-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_1_PATH "/soc/timers@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_1_FULL_NAME "timers@1"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_1_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_1_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_1_S_pwm)
#define DT_N_S_soc_S_timers_1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_1_ORD 67

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_1_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_1_SUPPORTS_ORDS \
	68, /* /soc/timers@1/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_1_EXISTS 1
#define DT_N_INST_2_ambiq_apollo3p_timers DT_N_S_soc_S_timers_1
#define DT_N_NODELABEL_ctimer1            DT_N_S_soc_S_timers_1

/* Special property macros: */
#define DT_N_S_soc_S_timers_1_REG_NUM 1
#define DT_N_S_soc_S_timers_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_timers_1_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timers_1_IRQ_NUM 0
#define DT_N_S_soc_S_timers_1_COMPAT_MATCHES_ambiq_apollo3p_timers 1
#define DT_N_S_soc_S_timers_1_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_1_P_label "CTIMER_1"
#define DT_N_S_soc_S_timers_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_1, label, 0) \
	fn(DT_N_S_soc_S_timers_1, label, 1) \
	fn(DT_N_S_soc_S_timers_1, label, 2) \
	fn(DT_N_S_soc_S_timers_1, label, 3) \
	fn(DT_N_S_soc_S_timers_1, label, 4) \
	fn(DT_N_S_soc_S_timers_1, label, 5) \
	fn(DT_N_S_soc_S_timers_1, label, 6) \
	fn(DT_N_S_soc_S_timers_1, label, 7)
#define DT_N_S_soc_S_timers_1_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_1_P_reg {1 /* 0x1 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timers_1_P_reg_IDX_0 1
#define DT_N_S_soc_S_timers_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_1_P_reg_IDX_1 32
#define DT_N_S_soc_S_timers_1_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_1_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_1, reg, 0) \
	fn(DT_N_S_soc_S_timers_1, reg, 1)
#define DT_N_S_soc_S_timers_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_1_P_status "disabled"
#define DT_N_S_soc_S_timers_1_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_1_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_1, status, 0) \
	fn(DT_N_S_soc_S_timers_1, status, 1) \
	fn(DT_N_S_soc_S_timers_1, status, 2) \
	fn(DT_N_S_soc_S_timers_1, status, 3) \
	fn(DT_N_S_soc_S_timers_1, status, 4) \
	fn(DT_N_S_soc_S_timers_1, status, 5) \
	fn(DT_N_S_soc_S_timers_1, status, 6) \
	fn(DT_N_S_soc_S_timers_1, status, 7)
#define DT_N_S_soc_S_timers_1_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_1_P_compatible {"ambiq,apollo3p-timers"}
#define DT_N_S_soc_S_timers_1_P_compatible_IDX_0 "ambiq,apollo3p-timers"
#define DT_N_S_soc_S_timers_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_1, compatible, 0)
#define DT_N_S_soc_S_timers_1_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_1_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@1/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_1_S_pwm
 *
 * Binding (compatible = ambiq,apollo3p-pwm):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/pwm/ambiq,apollo3p-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_1_S_pwm_PATH "/soc/timers@1/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_1_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@1) identifier: */
#define DT_N_S_soc_S_timers_1_S_pwm_PARENT DT_N_S_soc_S_timers_1
#define DT_N_S_soc_S_timers_1_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_1_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_1_S_pwm_ORD 68

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_1_S_pwm_REQUIRES_ORDS \
	67, /* /soc/timers@1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_1_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_1_S_pwm_EXISTS 1
#define DT_N_INST_2_ambiq_apollo3p_pwm DT_N_S_soc_S_timers_1_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_1_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_1_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_1_S_pwm_COMPAT_MATCHES_ambiq_apollo3p_pwm 1
#define DT_N_S_soc_S_timers_1_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_1_S_pwm_P_label "PWM_1"
#define DT_N_S_soc_S_timers_1_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_1_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_1_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_1_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_1_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_1_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_1_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_1_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_1_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_1_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_1_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_1_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_1_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_1_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_1_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_1_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_1_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_1_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_1_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_1_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_1_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_1_S_pwm_P_compatible {"ambiq,apollo3p-pwm"}
#define DT_N_S_soc_S_timers_1_S_pwm_P_compatible_IDX_0 "ambiq,apollo3p-pwm"
#define DT_N_S_soc_S_timers_1_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_1_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_1_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_1_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_1_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@2
 *
 * Node identifier: DT_N_S_soc_S_timers_2
 *
 * Binding (compatible = ambiq,apollo3p-timers):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/timer/ambiq,apollo3p-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_2_PATH "/soc/timers@2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_2_FULL_NAME "timers@2"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_2_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_2_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_2_S_pwm)
#define DT_N_S_soc_S_timers_2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_2_ORD 69

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_2_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_2_SUPPORTS_ORDS \
	70, /* /soc/timers@2/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_2_EXISTS 1
#define DT_N_INST_3_ambiq_apollo3p_timers DT_N_S_soc_S_timers_2
#define DT_N_NODELABEL_ctimer2            DT_N_S_soc_S_timers_2

/* Special property macros: */
#define DT_N_S_soc_S_timers_2_REG_NUM 1
#define DT_N_S_soc_S_timers_2_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_2_REG_IDX_0_VAL_ADDRESS 2 /* 0x2 */
#define DT_N_S_soc_S_timers_2_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timers_2_IRQ_NUM 0
#define DT_N_S_soc_S_timers_2_COMPAT_MATCHES_ambiq_apollo3p_timers 1
#define DT_N_S_soc_S_timers_2_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_2_P_label "CTIMER_2"
#define DT_N_S_soc_S_timers_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_2, label, 0) \
	fn(DT_N_S_soc_S_timers_2, label, 1) \
	fn(DT_N_S_soc_S_timers_2, label, 2) \
	fn(DT_N_S_soc_S_timers_2, label, 3) \
	fn(DT_N_S_soc_S_timers_2, label, 4) \
	fn(DT_N_S_soc_S_timers_2, label, 5) \
	fn(DT_N_S_soc_S_timers_2, label, 6) \
	fn(DT_N_S_soc_S_timers_2, label, 7)
#define DT_N_S_soc_S_timers_2_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_2_P_reg {2 /* 0x2 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timers_2_P_reg_IDX_0 2
#define DT_N_S_soc_S_timers_2_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_2_P_reg_IDX_1 32
#define DT_N_S_soc_S_timers_2_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_2_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_2, reg, 0) \
	fn(DT_N_S_soc_S_timers_2, reg, 1)
#define DT_N_S_soc_S_timers_2_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_2_P_status "disabled"
#define DT_N_S_soc_S_timers_2_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_2_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_2, status, 0) \
	fn(DT_N_S_soc_S_timers_2, status, 1) \
	fn(DT_N_S_soc_S_timers_2, status, 2) \
	fn(DT_N_S_soc_S_timers_2, status, 3) \
	fn(DT_N_S_soc_S_timers_2, status, 4) \
	fn(DT_N_S_soc_S_timers_2, status, 5) \
	fn(DT_N_S_soc_S_timers_2, status, 6) \
	fn(DT_N_S_soc_S_timers_2, status, 7)
#define DT_N_S_soc_S_timers_2_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_2_P_compatible {"ambiq,apollo3p-timers"}
#define DT_N_S_soc_S_timers_2_P_compatible_IDX_0 "ambiq,apollo3p-timers"
#define DT_N_S_soc_S_timers_2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_2, compatible, 0)
#define DT_N_S_soc_S_timers_2_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_2_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@2/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_2_S_pwm
 *
 * Binding (compatible = ambiq,apollo3p-pwm):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/pwm/ambiq,apollo3p-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_2_S_pwm_PATH "/soc/timers@2/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_2_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@2) identifier: */
#define DT_N_S_soc_S_timers_2_S_pwm_PARENT DT_N_S_soc_S_timers_2
#define DT_N_S_soc_S_timers_2_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_2_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_2_S_pwm_ORD 70

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_2_S_pwm_REQUIRES_ORDS \
	69, /* /soc/timers@2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_2_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_2_S_pwm_EXISTS 1
#define DT_N_INST_3_ambiq_apollo3p_pwm DT_N_S_soc_S_timers_2_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_2_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_2_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_2_S_pwm_COMPAT_MATCHES_ambiq_apollo3p_pwm 1
#define DT_N_S_soc_S_timers_2_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_2_S_pwm_P_label "PWM_2"
#define DT_N_S_soc_S_timers_2_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_2_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_2_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_2_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_2_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_2_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_2_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_2_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_2_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_2_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_2_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_2_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_2_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_2_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_2_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_2_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_2_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_2_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_2_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_2_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_2_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_2_S_pwm_P_compatible {"ambiq,apollo3p-pwm"}
#define DT_N_S_soc_S_timers_2_S_pwm_P_compatible_IDX_0 "ambiq,apollo3p-pwm"
#define DT_N_S_soc_S_timers_2_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_2_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_2_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_2_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_2_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@3
 *
 * Node identifier: DT_N_S_soc_S_timers_3
 *
 * Binding (compatible = ambiq,apollo3p-timers):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/timer/ambiq,apollo3p-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_3_PATH "/soc/timers@3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_3_FULL_NAME "timers@3"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_3_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_3_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_3_S_pwm)
#define DT_N_S_soc_S_timers_3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_3_ORD 71

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_3_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_3_SUPPORTS_ORDS \
	72, /* /soc/timers@3/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_3_EXISTS 1
#define DT_N_INST_4_ambiq_apollo3p_timers DT_N_S_soc_S_timers_3
#define DT_N_NODELABEL_ctimer3            DT_N_S_soc_S_timers_3

/* Special property macros: */
#define DT_N_S_soc_S_timers_3_REG_NUM 1
#define DT_N_S_soc_S_timers_3_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_3_REG_IDX_0_VAL_ADDRESS 3 /* 0x3 */
#define DT_N_S_soc_S_timers_3_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timers_3_IRQ_NUM 0
#define DT_N_S_soc_S_timers_3_COMPAT_MATCHES_ambiq_apollo3p_timers 1
#define DT_N_S_soc_S_timers_3_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_3_P_label "CTIMER_3"
#define DT_N_S_soc_S_timers_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_3, label, 0) \
	fn(DT_N_S_soc_S_timers_3, label, 1) \
	fn(DT_N_S_soc_S_timers_3, label, 2) \
	fn(DT_N_S_soc_S_timers_3, label, 3) \
	fn(DT_N_S_soc_S_timers_3, label, 4) \
	fn(DT_N_S_soc_S_timers_3, label, 5) \
	fn(DT_N_S_soc_S_timers_3, label, 6) \
	fn(DT_N_S_soc_S_timers_3, label, 7)
#define DT_N_S_soc_S_timers_3_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_3_P_reg {3 /* 0x3 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timers_3_P_reg_IDX_0 3
#define DT_N_S_soc_S_timers_3_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_3_P_reg_IDX_1 32
#define DT_N_S_soc_S_timers_3_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_3_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_3, reg, 0) \
	fn(DT_N_S_soc_S_timers_3, reg, 1)
#define DT_N_S_soc_S_timers_3_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_3_P_status "disabled"
#define DT_N_S_soc_S_timers_3_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_3_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_3_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_3, status, 0) \
	fn(DT_N_S_soc_S_timers_3, status, 1) \
	fn(DT_N_S_soc_S_timers_3, status, 2) \
	fn(DT_N_S_soc_S_timers_3, status, 3) \
	fn(DT_N_S_soc_S_timers_3, status, 4) \
	fn(DT_N_S_soc_S_timers_3, status, 5) \
	fn(DT_N_S_soc_S_timers_3, status, 6) \
	fn(DT_N_S_soc_S_timers_3, status, 7)
#define DT_N_S_soc_S_timers_3_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_3_P_compatible {"ambiq,apollo3p-timers"}
#define DT_N_S_soc_S_timers_3_P_compatible_IDX_0 "ambiq,apollo3p-timers"
#define DT_N_S_soc_S_timers_3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_3, compatible, 0)
#define DT_N_S_soc_S_timers_3_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_3_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@3/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_3_S_pwm
 *
 * Binding (compatible = ambiq,apollo3p-pwm):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/pwm/ambiq,apollo3p-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_3_S_pwm_PATH "/soc/timers@3/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_3_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@3) identifier: */
#define DT_N_S_soc_S_timers_3_S_pwm_PARENT DT_N_S_soc_S_timers_3
#define DT_N_S_soc_S_timers_3_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_3_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_3_S_pwm_ORD 72

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_3_S_pwm_REQUIRES_ORDS \
	71, /* /soc/timers@3 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_3_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_3_S_pwm_EXISTS 1
#define DT_N_INST_4_ambiq_apollo3p_pwm DT_N_S_soc_S_timers_3_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_3_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_3_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_3_S_pwm_COMPAT_MATCHES_ambiq_apollo3p_pwm 1
#define DT_N_S_soc_S_timers_3_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_3_S_pwm_P_label "PWM_3"
#define DT_N_S_soc_S_timers_3_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_3_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_3_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_3_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_3_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_3_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_3_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_3_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_3_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_3_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_3_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_3_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_3_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_3_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_3_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_3_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_3_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_3_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_3_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_3_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_3_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_3_S_pwm_P_compatible {"ambiq,apollo3p-pwm"}
#define DT_N_S_soc_S_timers_3_S_pwm_P_compatible_IDX_0 "ambiq,apollo3p-pwm"
#define DT_N_S_soc_S_timers_3_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_3_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_3_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_3_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_3_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@4
 *
 * Node identifier: DT_N_S_soc_S_timers_4
 *
 * Binding (compatible = ambiq,apollo3p-timers):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/timer/ambiq,apollo3p-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_4_PATH "/soc/timers@4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_4_FULL_NAME "timers@4"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_4_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_4_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_4_S_pwm)
#define DT_N_S_soc_S_timers_4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_4_ORD 73

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_4_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_4_SUPPORTS_ORDS \
	74, /* /soc/timers@4/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_4_EXISTS 1
#define DT_N_INST_5_ambiq_apollo3p_timers DT_N_S_soc_S_timers_4
#define DT_N_NODELABEL_ctimer4            DT_N_S_soc_S_timers_4

/* Special property macros: */
#define DT_N_S_soc_S_timers_4_REG_NUM 1
#define DT_N_S_soc_S_timers_4_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_4_REG_IDX_0_VAL_ADDRESS 4 /* 0x4 */
#define DT_N_S_soc_S_timers_4_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timers_4_IRQ_NUM 0
#define DT_N_S_soc_S_timers_4_COMPAT_MATCHES_ambiq_apollo3p_timers 1
#define DT_N_S_soc_S_timers_4_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_4_P_label "CTIMER_4"
#define DT_N_S_soc_S_timers_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_4, label, 0) \
	fn(DT_N_S_soc_S_timers_4, label, 1) \
	fn(DT_N_S_soc_S_timers_4, label, 2) \
	fn(DT_N_S_soc_S_timers_4, label, 3) \
	fn(DT_N_S_soc_S_timers_4, label, 4) \
	fn(DT_N_S_soc_S_timers_4, label, 5) \
	fn(DT_N_S_soc_S_timers_4, label, 6) \
	fn(DT_N_S_soc_S_timers_4, label, 7)
#define DT_N_S_soc_S_timers_4_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_4_P_reg {4 /* 0x4 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timers_4_P_reg_IDX_0 4
#define DT_N_S_soc_S_timers_4_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_4_P_reg_IDX_1 32
#define DT_N_S_soc_S_timers_4_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_4_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_4, reg, 0) \
	fn(DT_N_S_soc_S_timers_4, reg, 1)
#define DT_N_S_soc_S_timers_4_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_4_P_status "disabled"
#define DT_N_S_soc_S_timers_4_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_4_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_4_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_4_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_4, status, 0) \
	fn(DT_N_S_soc_S_timers_4, status, 1) \
	fn(DT_N_S_soc_S_timers_4, status, 2) \
	fn(DT_N_S_soc_S_timers_4, status, 3) \
	fn(DT_N_S_soc_S_timers_4, status, 4) \
	fn(DT_N_S_soc_S_timers_4, status, 5) \
	fn(DT_N_S_soc_S_timers_4, status, 6) \
	fn(DT_N_S_soc_S_timers_4, status, 7)
#define DT_N_S_soc_S_timers_4_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_4_P_compatible {"ambiq,apollo3p-timers"}
#define DT_N_S_soc_S_timers_4_P_compatible_IDX_0 "ambiq,apollo3p-timers"
#define DT_N_S_soc_S_timers_4_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_4_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_4, compatible, 0)
#define DT_N_S_soc_S_timers_4_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_4_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@4/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_4_S_pwm
 *
 * Binding (compatible = ambiq,apollo3p-pwm):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/pwm/ambiq,apollo3p-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_4_S_pwm_PATH "/soc/timers@4/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_4_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@4) identifier: */
#define DT_N_S_soc_S_timers_4_S_pwm_PARENT DT_N_S_soc_S_timers_4
#define DT_N_S_soc_S_timers_4_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_4_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_4_S_pwm_ORD 74

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_4_S_pwm_REQUIRES_ORDS \
	73, /* /soc/timers@4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_4_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_4_S_pwm_EXISTS 1
#define DT_N_INST_5_ambiq_apollo3p_pwm DT_N_S_soc_S_timers_4_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_4_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_4_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_4_S_pwm_COMPAT_MATCHES_ambiq_apollo3p_pwm 1
#define DT_N_S_soc_S_timers_4_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_4_S_pwm_P_label "PWM_4"
#define DT_N_S_soc_S_timers_4_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_4_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_4_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_4_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_4_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_4_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_4_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_4_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_4_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_4_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_4_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_4_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_4_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_4_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_4_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_4_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_4_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_4_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_4_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_4_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_4_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_4_S_pwm_P_compatible {"ambiq,apollo3p-pwm"}
#define DT_N_S_soc_S_timers_4_S_pwm_P_compatible_IDX_0 "ambiq,apollo3p-pwm"
#define DT_N_S_soc_S_timers_4_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_4_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_4_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_4_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_4_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@5
 *
 * Node identifier: DT_N_S_soc_S_timers_5
 *
 * Binding (compatible = ambiq,apollo3p-timers):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/timer/ambiq,apollo3p-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_5_PATH "/soc/timers@5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_5_FULL_NAME "timers@5"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_5_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_5_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_5_S_pwm)
#define DT_N_S_soc_S_timers_5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_5_ORD 75

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_5_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_5_SUPPORTS_ORDS \
	76, /* /soc/timers@5/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_5_EXISTS 1
#define DT_N_INST_6_ambiq_apollo3p_timers DT_N_S_soc_S_timers_5
#define DT_N_NODELABEL_ctimer5            DT_N_S_soc_S_timers_5

/* Special property macros: */
#define DT_N_S_soc_S_timers_5_REG_NUM 1
#define DT_N_S_soc_S_timers_5_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_5_REG_IDX_0_VAL_ADDRESS 5 /* 0x5 */
#define DT_N_S_soc_S_timers_5_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timers_5_IRQ_NUM 0
#define DT_N_S_soc_S_timers_5_COMPAT_MATCHES_ambiq_apollo3p_timers 1
#define DT_N_S_soc_S_timers_5_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_5_P_label "CTIMER_5"
#define DT_N_S_soc_S_timers_5_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_5, label, 0) \
	fn(DT_N_S_soc_S_timers_5, label, 1) \
	fn(DT_N_S_soc_S_timers_5, label, 2) \
	fn(DT_N_S_soc_S_timers_5, label, 3) \
	fn(DT_N_S_soc_S_timers_5, label, 4) \
	fn(DT_N_S_soc_S_timers_5, label, 5) \
	fn(DT_N_S_soc_S_timers_5, label, 6) \
	fn(DT_N_S_soc_S_timers_5, label, 7)
#define DT_N_S_soc_S_timers_5_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_5_P_reg {5 /* 0x5 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timers_5_P_reg_IDX_0 5
#define DT_N_S_soc_S_timers_5_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_5_P_reg_IDX_1 32
#define DT_N_S_soc_S_timers_5_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_5_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_5, reg, 0) \
	fn(DT_N_S_soc_S_timers_5, reg, 1)
#define DT_N_S_soc_S_timers_5_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_5_P_status "disabled"
#define DT_N_S_soc_S_timers_5_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_5_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_5_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_5_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_5, status, 0) \
	fn(DT_N_S_soc_S_timers_5, status, 1) \
	fn(DT_N_S_soc_S_timers_5, status, 2) \
	fn(DT_N_S_soc_S_timers_5, status, 3) \
	fn(DT_N_S_soc_S_timers_5, status, 4) \
	fn(DT_N_S_soc_S_timers_5, status, 5) \
	fn(DT_N_S_soc_S_timers_5, status, 6) \
	fn(DT_N_S_soc_S_timers_5, status, 7)
#define DT_N_S_soc_S_timers_5_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_5_P_compatible {"ambiq,apollo3p-timers"}
#define DT_N_S_soc_S_timers_5_P_compatible_IDX_0 "ambiq,apollo3p-timers"
#define DT_N_S_soc_S_timers_5_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_5_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_5, compatible, 0)
#define DT_N_S_soc_S_timers_5_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_5_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@5/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_5_S_pwm
 *
 * Binding (compatible = ambiq,apollo3p-pwm):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/pwm/ambiq,apollo3p-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_5_S_pwm_PATH "/soc/timers@5/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_5_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@5) identifier: */
#define DT_N_S_soc_S_timers_5_S_pwm_PARENT DT_N_S_soc_S_timers_5
#define DT_N_S_soc_S_timers_5_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_5_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_5_S_pwm_ORD 76

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_5_S_pwm_REQUIRES_ORDS \
	75, /* /soc/timers@5 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_5_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_5_S_pwm_EXISTS 1
#define DT_N_INST_6_ambiq_apollo3p_pwm DT_N_S_soc_S_timers_5_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_5_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_5_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_5_S_pwm_COMPAT_MATCHES_ambiq_apollo3p_pwm 1
#define DT_N_S_soc_S_timers_5_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_5_S_pwm_P_label "PWM_5"
#define DT_N_S_soc_S_timers_5_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_5_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_5_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_5_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_5_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_5_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_5_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_5_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_5_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_5_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_5_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_5_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_5_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_5_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_5_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_5_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_5_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_5_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_5_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_5_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_5_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_5_S_pwm_P_compatible {"ambiq,apollo3p-pwm"}
#define DT_N_S_soc_S_timers_5_S_pwm_P_compatible_IDX_0 "ambiq,apollo3p-pwm"
#define DT_N_S_soc_S_timers_5_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_5_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_5_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_5_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_5_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@7
 *
 * Node identifier: DT_N_S_soc_S_timers_7
 *
 * Binding (compatible = ambiq,apollo3p-timers):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/timer/ambiq,apollo3p-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_7_PATH "/soc/timers@7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_7_FULL_NAME "timers@7"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_7_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_7_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_7_S_pwm)
#define DT_N_S_soc_S_timers_7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_7_ORD 77

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_7_REQUIRES_ORDS \
	13, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_7_SUPPORTS_ORDS \
	78, /* /soc/timers@7/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_7_EXISTS 1
#define DT_N_INST_7_ambiq_apollo3p_timers DT_N_S_soc_S_timers_7
#define DT_N_NODELABEL_ctimer7            DT_N_S_soc_S_timers_7

/* Special property macros: */
#define DT_N_S_soc_S_timers_7_REG_NUM 1
#define DT_N_S_soc_S_timers_7_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_7_REG_IDX_0_VAL_ADDRESS 7 /* 0x7 */
#define DT_N_S_soc_S_timers_7_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timers_7_IRQ_NUM 0
#define DT_N_S_soc_S_timers_7_COMPAT_MATCHES_ambiq_apollo3p_timers 1
#define DT_N_S_soc_S_timers_7_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_7_P_label "CTIMER_7"
#define DT_N_S_soc_S_timers_7_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_7, label, 0) \
	fn(DT_N_S_soc_S_timers_7, label, 1) \
	fn(DT_N_S_soc_S_timers_7, label, 2) \
	fn(DT_N_S_soc_S_timers_7, label, 3) \
	fn(DT_N_S_soc_S_timers_7, label, 4) \
	fn(DT_N_S_soc_S_timers_7, label, 5) \
	fn(DT_N_S_soc_S_timers_7, label, 6) \
	fn(DT_N_S_soc_S_timers_7, label, 7)
#define DT_N_S_soc_S_timers_7_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_7_P_reg {7 /* 0x7 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timers_7_P_reg_IDX_0 7
#define DT_N_S_soc_S_timers_7_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_7_P_reg_IDX_1 32
#define DT_N_S_soc_S_timers_7_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_7_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_7, reg, 0) \
	fn(DT_N_S_soc_S_timers_7, reg, 1)
#define DT_N_S_soc_S_timers_7_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_7_P_status "disabled"
#define DT_N_S_soc_S_timers_7_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_7_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_7_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_7_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_7, status, 0) \
	fn(DT_N_S_soc_S_timers_7, status, 1) \
	fn(DT_N_S_soc_S_timers_7, status, 2) \
	fn(DT_N_S_soc_S_timers_7, status, 3) \
	fn(DT_N_S_soc_S_timers_7, status, 4) \
	fn(DT_N_S_soc_S_timers_7, status, 5) \
	fn(DT_N_S_soc_S_timers_7, status, 6) \
	fn(DT_N_S_soc_S_timers_7, status, 7)
#define DT_N_S_soc_S_timers_7_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_7_P_compatible {"ambiq,apollo3p-timers"}
#define DT_N_S_soc_S_timers_7_P_compatible_IDX_0 "ambiq,apollo3p-timers"
#define DT_N_S_soc_S_timers_7_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_7_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_7, compatible, 0)
#define DT_N_S_soc_S_timers_7_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_7_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@7/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_7_S_pwm
 *
 * Binding (compatible = ambiq,apollo3p-pwm):
 *   /home/wt/zephyr-kit/project_wkpace/../bsps/dts/bindings/pwm/ambiq,apollo3p-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_7_S_pwm_PATH "/soc/timers@7/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_7_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@7) identifier: */
#define DT_N_S_soc_S_timers_7_S_pwm_PARENT DT_N_S_soc_S_timers_7
#define DT_N_S_soc_S_timers_7_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_7_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_7_S_pwm_ORD 78

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_7_S_pwm_REQUIRES_ORDS \
	77, /* /soc/timers@7 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_7_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_7_S_pwm_EXISTS 1
#define DT_N_INST_7_ambiq_apollo3p_pwm DT_N_S_soc_S_timers_7_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_7_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_7_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_7_S_pwm_COMPAT_MATCHES_ambiq_apollo3p_pwm 1
#define DT_N_S_soc_S_timers_7_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_7_S_pwm_P_label "PWM_7"
#define DT_N_S_soc_S_timers_7_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_7_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_7_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_7_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_7_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_7_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_7_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_7_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_7_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_7_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_7_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_7_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_7_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_7_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_7_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_7_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_7_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_7_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_7_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_7_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_7_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_7_S_pwm_P_compatible {"ambiq,apollo3p-pwm"}
#define DT_N_S_soc_S_timers_7_S_pwm_P_compatible_IDX_0 "ambiq,apollo3p-pwm"
#define DT_N_S_soc_S_timers_7_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_7_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_7_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_7_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_7_S_pwm_P_compatible_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_4001c000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_4001c000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_10010000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_ccm                     DT_N_S_memory_10000000
#define DT_CHOSEN_zephyr_ccm_EXISTS              1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40018000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_psram                          DT_N_S_memory_55000000
#define DT_CHOSEN_psram_EXISTS                   1
#define DT_COMPAT_fixed_partitions_LABEL_otp DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_otp_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_c000
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_40018000_S_flash_00000000_S_partitions_S_partition_3c000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_resource_img DT_N_S_mspi_nor_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_resource_img_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_watch_face_1 DT_N_S_mspi_nor_S_partitions_S_partition_800000
#define DT_COMPAT_fixed_partitions_LABEL_watch_face_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_watch_face_2 DT_N_S_mspi_nor_S_partitions_S_partition_a00000
#define DT_COMPAT_fixed_partitions_LABEL_watch_face_2_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_watch_face_3 DT_N_S_mspi_nor_S_partitions_S_partition_c00000
#define DT_COMPAT_fixed_partitions_LABEL_watch_face_3_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_watch_face_4 DT_N_S_mspi_nor_S_partitions_S_partition_e00000
#define DT_COMPAT_fixed_partitions_LABEL_watch_face_4_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_watch_face_5 DT_N_S_mspi_nor_S_partitions_S_partition_1000000
#define DT_COMPAT_fixed_partitions_LABEL_watch_face_5_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_mspi_nor_S_partitions_S_partition_1200000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_update_img DT_N_S_mspi_nor_S_partitions_S_partition_1400000
#define DT_COMPAT_fixed_partitions_LABEL_update_img_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_fs DT_N_S_mspi_nor_S_partitions_S_partition_1600000
#define DT_COMPAT_fixed_partitions_LABEL_fs_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_ambiq_apollo3p 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_ambiq_apollo3p_timers 1
#define DT_COMPAT_HAS_OKAY_ambiq_apollo3p_pwm 1
#define DT_COMPAT_HAS_OKAY_ambiq_apollo3p_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinmux 1
#define DT_COMPAT_HAS_OKAY_ambiq_apollo3p_gpio 1
#define DT_COMPAT_HAS_OKAY_ambiq_apllo3p_usart 1
#define DT_COMPAT_HAS_OKAY_ambiq_apollo3p_i2c 1
#define DT_COMPAT_HAS_OKAY_memsic_mmc5603 1
#define DT_COMPAT_HAS_OKAY_cellwise_cw6305 1
#define DT_COMPAT_HAS_OKAY_ambiq_apollo3p_spi 1
#define DT_COMPAT_HAS_OKAY_invensense_icm42607 1
#define DT_COMPAT_HAS_OKAY_ambiq_apollo3p_rtc 1
#define DT_COMPAT_HAS_OKAY_ambiq_apollo3p_adc 1
#define DT_COMPAT_HAS_OKAY_ambiq_apollo3p_mspi 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_aps1604_psram 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_gd_mspi_nor 1
#define DT_COMPAT_HAS_OKAY_ambiq_channel 1
#define DT_COMPAT_HAS_OKAY_pwm_motors 1
#define DT_COMPAT_HAS_OKAY_gpio_buttons 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_ambiq_apollo3p_NUM_OKAY 2
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_ambiq_apollo3p_timers_NUM_OKAY 2
#define DT_N_INST_ambiq_apollo3p_pwm_NUM_OKAY 2
#define DT_N_INST_ambiq_apollo3p_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 2
#define DT_N_INST_st_stm32_pinmux_NUM_OKAY 1
#define DT_N_INST_ambiq_apollo3p_gpio_NUM_OKAY 3
#define DT_N_INST_ambiq_apllo3p_usart_NUM_OKAY 2
#define DT_N_INST_ambiq_apollo3p_i2c_NUM_OKAY 5
#define DT_N_INST_memsic_mmc5603_NUM_OKAY 1
#define DT_N_INST_cellwise_cw6305_NUM_OKAY 1
#define DT_N_INST_ambiq_apollo3p_spi_NUM_OKAY 1
#define DT_N_INST_invensense_icm42607_NUM_OKAY 1
#define DT_N_INST_ambiq_apollo3p_rtc_NUM_OKAY 1
#define DT_N_INST_ambiq_apollo3p_adc_NUM_OKAY 1
#define DT_N_INST_ambiq_apollo3p_mspi_NUM_OKAY 2
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_aps1604_psram_NUM_OKAY 1
#define DT_N_INST_zephyr_power_state_NUM_OKAY 2
#define DT_N_INST_gd_mspi_nor_NUM_OKAY 1
#define DT_N_INST_ambiq_channel_NUM_OKAY 1
#define DT_N_INST_pwm_motors_NUM_OKAY 1
#define DT_N_INST_gpio_buttons_NUM_OKAY 1
#define DT_FOREACH_OKAY_INST_ambiq_apollo3p(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_ambiq_apollo3p_timers(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_ambiq_apollo3p_pwm(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_ambiq_apollo3p_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_st_stm32_pinmux(fn) fn(0)
#define DT_FOREACH_OKAY_INST_ambiq_apollo3p_gpio(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_ambiq_apllo3p_usart(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_ambiq_apollo3p_i2c(fn) fn(0) fn(1) fn(2) fn(3) fn(4)
#define DT_FOREACH_OKAY_INST_memsic_mmc5603(fn) fn(0)
#define DT_FOREACH_OKAY_INST_cellwise_cw6305(fn) fn(0)
#define DT_FOREACH_OKAY_INST_ambiq_apollo3p_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_invensense_icm42607(fn) fn(0)
#define DT_FOREACH_OKAY_INST_ambiq_apollo3p_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_ambiq_apollo3p_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_ambiq_apollo3p_mspi(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_aps1604_psram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_gd_mspi_nor(fn) fn(0)
#define DT_FOREACH_OKAY_INST_ambiq_channel(fn) fn(0)
#define DT_FOREACH_OKAY_INST_pwm_motors(fn) fn(0)
#define DT_FOREACH_OKAY_INST_gpio_buttons(fn) fn(0)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_memsic_mmc5603_BUS_i2c 1
#define DT_COMPAT_cellwise_cw6305_BUS_i2c 1
#define DT_COMPAT_invensense_icm42607_BUS_spi 1
